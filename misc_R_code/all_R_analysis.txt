# source ("all_R_analysis.txt")



#### Module 1
# module from HP2_ave_foci_per_nuc.txt
#### First module gives average number of foci per nucleus and associated standard deviation, ratio of the average number of foci per nucleus with numbers greater than one indicating more foci per nucleus in exp



sink("HP2_ave_foci_per_nuc_output");

cont <- read.table("/Users/joel/Desktop/6_10_09_imagesprocessed_with_sylvain/Processed/HP2_control/processed/fitc/nuc_summary.txt",header = TRUE);
exp <- read.table("/Users/joel/Desktop/6_10_09_imagesprocessed_with_sylvain/Processed/HP2/processed/fitc/nuc_summary.txt",header = TRUE);
x<- sum(exp$FociCount)/nrow(exp); # counts number of foci and divides it by the number of nuclei    gives average number of foci per nucleus in the experiment
sdx<-sd(exp$FociCount/nrow(exp));
y<- sum(cont$FociCount)/nrow(cont);
sdy<-sd(cont$FociCount/nrow(exp));
cat("stdev of exp");
print(sdx);
cat("stdev of cont");
print(sdy);
cat("average number of foci per nucleus in the exp");
print(x);
cat("average number of foci per nucleus in the exp");
print(y);
cat("ratio of the average number of foci per nucleus with numbers greater than one indicating more foci per nucleus in exp");
print(x/y); # ratio of the average number of foci per nucleus with numbers greater than one indicating more foci per nucleus in exp
sink();



###### module 2
# module from stats_tests.txt
# gives the number of nuclei count, sd and mean of $Rdna, performs shapiro normality, t.test and wilcox.test on exp$Rdna vs. cont$Rdna

sink("HP2_stats_tests_output");

cont <- read.table("/Users/joel/Desktop/6_10_09_imagesprocessed_with_sylvain/Processed/HP2_control/processed/fitc/nuc_summary.txt",header = TRUE);
exp <- read.table("/Users/joel/Desktop/6_10_09_imagesprocessed_with_sylvain/Processed/HP2/processed/fitc/nuc_summary.txt",header = TRUE);

nrow(exp); # Gives number of nuclei counted in the exp
nrow(cont); # Gives number of nuclei counted in the cont
sd_exp <- sd(exp$Rdna);
mean_exp <- mean(exp$Rdna);
sd_cont <- sd(cont$Rdna);
mean_cont <- mean(cont$Rdna);
shapiro.test(exp$Rdna); # performs normality test on experimental data.  if p-value is above .05 than it is not normal
shapiro.test(cont$Rdna);
t.test(exp$Rdna,cont$Rdna); # use if data is normal
wilcox.test(exp$Rdna,cont$Rdna); # use if data is not normal

cat("nuclei counted in the exp");
print(nrow(exp));
cat("nuclei counted in the cont");
print(nrow(cont));
cat("sd_exp");
print(sd_exp);
cat("sd_cont");
print(sd_cont);
cat("mean_exp");
print(mean_exp);
cat("mean_cont");
print(mean_cont);
print(shapiro.test(exp$Rdna));
print(shapiro.test(cont$Rdna));
print(t.test(exp$Rdna,cont$Rdna));
print(wilcox.test(exp$Rdna,cont$Rdna));


sink();


######## module 3
# source("histograms.txt")  #boxplots and qqplots not in source file though
# Gives histograms, boxplots, and qqplots of the distribution of exp$Rdna and cont$Rdna

cont <- read.table("/Users/joel/Desktop/6_10_09_imagesprocessed_with_sylvain/Processed/HP2_control/processed/fitc/nuc_summary.txt",header = TRUE);
exp <- read.table("/Users/joel/Desktop/6_10_09_imagesprocessed_with_sylvain/Processed/HP2/processed/fitc/nuc_summary.txt",header = TRUE);

exp_col<-rgb(1,0,0,.75); #assigns color and alpha value to exp data points
cont_col<-rgb(0,0,1,.5);

tiff(file="Histogram_of_HP2_and_GFP_control_no_thr.tiff");
hist(exp$Rdna, breaks=100, col=exp_col, main="Histogram for HP2 and GFP control of Rdna per nucleus");
hist(cont$Rdna, breaks=100, col=cont_col, add=TRUE);
legend("topleft", c("HP2","HP2_control"), cex=0.8,col=c(exp_col,cont_col), pch=21:22, lty=1:2);
dev.off(); #turns postscript off

tiff(file="Histogram_of_HP2_no_thr.tiff")
hist(exp$Rdna, breaks=100, col=exp_col, main="Histogram for HP2 of Rdna per nucleus");
legend("topleft", c("HP2","HP2_control"), cex=0.8,col=c(exp_col,cont_col), pch=21:22, lty=1:2);
dev.off(); #turns postscript off

tiff("Histogram_of_HP2_control_no_thr.tiff")
hist(exp$Rdna, breaks=100, col=cont_col, main="Histogram for HP2_control of Rdna per nucleus");
legend("topleft", c("HP2","HP2_control"), cex=0.8,col=c(exp_col,cont_col), pch=21:22, lty=1:2);
dev.off(); #turns postscript off

postscript("HP2qq_no_thr.ps"); #turns postscript on to save file to location in ""
qqplot(exp$Rdna, cont$Rdna); #makes qqplot
dev.off(); #turns postscript off

postscript("HP2_boxplot_no_thr.ps"); #turns postscript on to save file to location in ""
boxplot(exp$Rdna, cont$Rdna, ylab="average Rdna value per nucleus", xlab="Left is HP2, right is control"); #makes boxplot
dev.off(); #turns postscript off


#### per foci
cont <- read.table("/Users/joel/Desktop/6_10_09_imagesprocessed_with_sylvain/Processed/HP2_control/processed/fitc/foci_summary.txt",header = TRUE);
exp <- read.table("/Users/joel/Desktop/6_10_09_imagesprocessed_with_sylvain/Processed/HP2/processed/fitc/foci_summary.txt",header = TRUE);

exp_col<-rgb(1,0,0,.75); #assigns color and alpha value to exp data points
cont_col<-rgb(0,0,1,.5);

tiff(file="Histogram_of_HP2_and_GFP_control_no_thr_per_foci.tiff");
hist(exp$Rdna, breaks=100, col=exp_col, main="Histogram for HP2 and GFP control of Rdna per foci");
hist(cont$Rdna, breaks=100, col=cont_col, add=TRUE);
legend("topleft", c("HP2","HP2_control"), cex=0.8,col=c(exp_col,cont_col), pch=21:22, lty=1:2);
dev.off(); #turns postscript off

tiff(file="Histogram_of_HP2_no_thr_per_foci.tiff")
hist(exp$Rdna, breaks=100, col=exp_col, main="Histogram for HP2 of Rdna per foci");
legend("topleft", c("HP2","HP2_control"), cex=0.8,col=c(exp_col,cont_col), pch=21:22, lty=1:2);
dev.off(); #turns postscript off

tiff("Histogram_of_HP2_control_no_thr_per_foci.tiff")
hist(exp$Rdna, breaks=100, col=cont_col, main="Histogram for HP2_control of Rdna per foci");
legend("topleft", c("HP2","HP2_control"), cex=0.8,col=c(exp_col,cont_col), pch=21:22, lty=1:2);
dev.off(); #turns postscript off

postscript("HP2qq_no_thr_per_foci.ps"); #turns postscript on to save file to location in ""
qqplot(exp$Rdna, cont$Rdna); #makes qqplot
dev.off(); #turns postscript off

postscript("HP2_boxplot_no_thr_per_foci.ps"); #turns postscript on to save file to location in ""
boxplot(exp$Rdna, cont$Rdna, ylab="average Rdna value per foci", xlab="Left is HP2, right is control"); #makes boxplot
dev.off(); #turns postscript off


###################################################
#Thresholding analysis




# cd /Users/joel/Desktop/6_10_09_imagesprocessed_with_sylvain/Processed/
# source("stats_sylvain_absolute_number.txt")
# Set threshold for group

#########  thr <- 1.100

thr <- 1.100;

# Process control
cont <- read.table("/Users/joel/Desktop/6_10_09_imagesprocessed_with_sylvain/Processed/HP2_control/processed/fitc/foci_summary.txt",header = TRUE);
aggRdna = aggregate(cont$Rdna,by=list(cont$NucID,cont$Filename),FUN=mean)
pos_RdnaC <- matrix(0,nrow=aggRdna$Group.1,ncol=1);
total_RdnaC <- matrix(0,nrow=aggRdna$Group.1,ncol=1);

for (i in 1:length(aggRdna$Group.1))
pos_RdnaC[i] <- sum((cont$NucID==aggRdna$Group.1[i])&(cont$Filename==aggRdna$Group.2[i])&(cont$Rdna>1.100));

for (i in 1:length(aggRdna$Group.1))
total_RdnaC[i] <- sum((cont$NucID==aggRdna$Group.1[i])&(cont$Filename==aggRdna$Group.2[i])&(cont$Rdna>0));

Perc_pos_Rdna_cont = pos_RdnaC; # number of foci above 1.100 per nucleus
Perc_pos_Rdna_cont_f = pos_RdnaC/total_RdnaC;

# Process experiment
exp <- read.table("/Users/joel/Desktop/6_10_09_imagesprocessed_with_sylvain/Processed/HP2/processed/fitc/foci_summary.txt",header = TRUE);
aggRdna = aggregate(exp$Rdna,by=list(exp$NucID,exp$Filename),FUN=mean)
pos_Rdna <- matrix(0,nrow=aggRdna$Group.1,ncol=1);
total_Rdna <- matrix(0,nrow=aggRdna$Group.1,ncol=1);

for (i in 1:length(aggRdna$Group.1))
pos_Rdna[i] <- sum((exp$NucID==aggRdna$Group.1[i])&(exp$Filename==aggRdna$Group.2[i])&(exp$Rdna>1.100));

for (i in 1:length(aggRdna$Group.1))
total_Rdna[i] <- sum((exp$NucID==aggRdna$Group.1[i])&(exp$Filename==aggRdna$Group.2[i])&(exp$Rdna>0));

Perc_pos_Rdna_exp = pos_Rdna; # gives number of foci in a nucleus above a given Rdna value which is defined by 1.100
Perc_pos_Rdna_exp_f = pos_Rdna/total_Rdna; # gives fraction of foci in a nucleus above a given Rdna value which is defined by 1.100




postscript("HP2_above_1.100_boxplot.ps"); #turns postscript on to save file to location in ""
boxplot(Perc_pos_Rdna_exp, Perc_pos_Rdna_cont, ylab= "number of foci per nucleus where Rdna > 1.100", xlab="Left is HP2, right is control"); #makes boxplot
dev.off(); #turns postscript off

postscript("HP2_above_1.100_qqplot.ps"); #turns postscript on to save file to location in ""
qqplot(Perc_pos_Rdna_exp, Perc_pos_Rdna_cont, main ="number of foci per nucleus where Rdna > 1.100"); #makes qqplot
dev.off(); #turns postscript off


postscript("HP2_above_1.100_boxplot_fraction.ps"); #turns postscript on to save file to location in ""
boxplot(Perc_pos_Rdna_exp_f, Perc_pos_Rdna_cont_f, ylab= "fraction of foci per nucleus where Rdna > 1.100", xlab="Left is HP2, right is control"); #makes boxplot
dev.off(); #turns postscript off

postscript("HP2_above_1.100_qqplot_fraction.ps"); #turns postscript on to save file to location in ""
qqplot(Perc_pos_Rdna_exp_f, Perc_pos_Rdna_cont_f, main ="fraction of foci per nucleus where Rdna > 1.100"); #makes qqplot
dev.off(); #turns postscript off




exp_above_1.100 <- Perc_pos_Rdna_exp;
cntrl_above_1.100 <- Perc_pos_Rdna_cont;


# performs above analysis for values less than or equal to the threshold
# Process control
cont <- read.table("/Users/joel/Desktop/6_10_09_imagesprocessed_with_sylvain/Processed/HP2_control/processed/fitc/foci_summary.txt",header = TRUE);
aggRdna = aggregate(cont$Rdna,by=list(cont$NucID,cont$Filename),FUN=mean)
pos_RdnaC <- matrix(0,nrow=aggRdna$Group.1,ncol=1);
total_RdnaC <- matrix(0,nrow=aggRdna$Group.1,ncol=1);

for (i in 1:length(aggRdna$Group.1))
pos_RdnaC[i] <- sum((cont$NucID==aggRdna$Group.1[i])&(cont$Filename==aggRdna$Group.2[i])&(cont$Rdna<=1.100));

for (i in 1:length(aggRdna$Group.1))
total_RdnaC[i] <- sum((cont$NucID==aggRdna$Group.1[i])&(cont$Filename==aggRdna$Group.2[i])&(cont$Rdna>0));

Perc_pos_Rdna_cont = pos_RdnaC;
Perc_pos_Rdna_cont_f = pos_RdnaC/total_RdnaC;


# Process experiment
exp <- read.table("/Users/joel/Desktop/6_10_09_imagesprocessed_with_sylvain/Processed/HP2/processed/fitc/foci_summary.txt",header = TRUE);
aggRdna = aggregate(exp$Rdna,by=list(exp$NucID,exp$Filename),FUN=mean)
pos_Rdna <- matrix(0,nrow=aggRdna$Group.1,ncol=1);
total_Rdna <- matrix(0,nrow=aggRdna$Group.1,ncol=1);

for (i in 1:length(aggRdna$Group.1))
pos_Rdna[i] <- sum((exp$NucID==aggRdna$Group.1[i])&(exp$Filename==aggRdna$Group.2[i])&(exp$Rdna<=1.100));

for (i in 1:length(aggRdna$Group.1))
total_Rdna[i] <- sum((exp$NucID==aggRdna$Group.1[i])&(exp$Filename==aggRdna$Group.2[i])&(exp$Rdna>0));

Perc_pos_Rdna_exp = pos_Rdna; #gives fraction of foci in a nucleus above a given Rdna value which is defined by thr
Perc_pos_Rdna_exp_f = pos_Rdna/total_Rdna;

postscript("HP2_at_or_below_1.100_boxplot<=.ps"); #turns postscript on to save file to location in ""
boxplot(Perc_pos_Rdna_exp, Perc_pos_Rdna_cont, ylab= "number of foci per nucleus where Rdna < or = 1.100", xlab="Left is HP2, right is control"); #makes boxplot
dev.off(); #turns postscript off

postscript("HP2_at_or_below_1.100_qqplot<=.ps"); #turns postscript on to save file to location in ""
qqplot(Perc_pos_Rdna_cont, Perc_pos_Rdna_exp, main="number of foci per nucleus where Rdna < or = 1.100"); #makes qqplot
dev.off(); #turns postscript off

postscript("HP2_at_or_below_1.100_boxplot_fraction.ps"); #turns postscript on to save file to location in ""
boxplot(Perc_pos_Rdna_exp_f, Perc_pos_Rdna_cont_f, ylab= "fraction of foci per nucleus where Rdna < or = 1.100", xlab="Left is HP2, right is control"); #makes boxplot
dev.off(); #turns postscript off

postscript("HP2_at_or_below_1.100_qqplot_fraction.ps"); #turns postscript on to save file to location in ""
qqplot(Perc_pos_Rdna_exp_f, Perc_pos_Rdna_cont_f, main="fraction of foci per nucleus where Rdna < or = 1.100"); #makes qqplot
dev.off(); #turns postscript off


# Calculation of stats above and below thr

sink("stat_tests_above_and_less_or_equal_to_1.100_output.txt");
 
contRdna_above_1.100 <- cont$Rdna[(cont$Rdna>1.100)]; # Extracts values above 1.100 and puts it in contRdna_above_1.100
expRdna_above_1.100 <- exp$Rdna[(exp$Rdna>1.100)];
print(shapiro.test(expRdna_above_1.100));
print(shapiro.test(contRdna_above_1.100));
print(t.test(contRdna_above_1.100,expRdna_above_1.100));
print(wilcox.test(contRdna_above_1.100,expRdna_above_1.100));

contRdna_at_or_below_1.100 <- cont$Rdna[(cont$Rdna<=1.100)];
expRdna_at_or_below_1.100 <- exp$Rdna[(exp$Rdna<=1.100)];
print(shapiro.test(expRdna_at_or_below_1.100));
print(shapiro.test(contRdna_at_or_below_1.100));
print(t.test(contRdna_at_or_below_1.100,expRdna_at_or_below_1.100));
print(wilcox.test(contRdna_at_or_below_1.100,expRdna_at_or_below_1.100));

sink();

postscript("HP2_Rdna_above_1.100_thr_boxplot_z.ps");
boxplot(expRdna_above_1.100,contRdna_above_1.100, ylab= "average Rdna per nucleus where Rdna is > 1.100", xlab="Left is HP2, right is control");
dev.off();

postscript("HP2_Rdna_at_or_below_1.100_thr_boxplot_z.ps");
boxplot(expRdna_at_or_below_1.100,contRdna_at_or_below_1.100, ylab= "average Rdna per nucleus where Rdna is < or = 1.100", xlab="Left is HP2, right is control");
dev.off();




##########names

exp_col<-rgb(1,0,0,.75); #assigns color and alpha value to exp data points
cont_col<-rgb(0,0,1,.5);

tiff(file="Histogram_of_HP2_and_GFP_control_above_1.100.tiff");
hist(expRdna_above_1.100, breaks=100, col=exp_col, main="Histogram of HP2 and GFP control Rdna values above 1.100");
hist(contRdna_above_1.100, breaks=100, col=cont_col, add=TRUE);
legend("topleft", c("HP2","HP2_control"), cex=0.8,col=c(exp_col,cont_col), pch=21:22, lty=1:2);
dev.off(); #turns postscript off

tiff(file="Histogram_of_HP2_above_1.100.tiff")
hist(expRdna_above_1.100, breaks=100, col=exp_col, main="Histogram of HP2 values above 1.100");
legend("topleft", c("HP2","HP2_control"), cex=0.8,col=c(exp_col,cont_col), pch=21:22, lty=1:2);
dev.off(); #turns postscript off

tiff("Histogram_of_HP2_control_above_1.100.tiff")
hist(contRdna_above_1.100, breaks=100, col=cont_col, main="Histogram of HP2_control values above 1.100");
legend("topleft", c("HP2","HP2_control"), cex=0.8,col=c(exp_col,cont_col), pch=21:22, lty=1:2);
dev.off(); #turns postscript off




tiff(file="Histogram_of_HP2_and_GFP_control_at_or_below_1.100.tiff");
hist(expRdna_at_or_below_1.100, breaks=100, col=exp_col, main="Histogram of HP2 and GFP control Rdna values at_or_below 1.100");
hist(contRdna_at_or_below_1.100, breaks=100, col=cont_col, add=TRUE);
legend("topleft", c("HP2","HP2_control"), cex=0.8,col=c(exp_col,cont_col), pch=21:22, lty=1:2);
dev.off(); #turns postscript off

tiff(file="Histogram_of_HP2_at_or_below_1.100.tiff");
hist(expRdna_at_or_below_1.100, breaks=100, col=exp_col, main="Histogram of HP2 values at_or_below 1.100");
legend("topleft", c("HP2","HP2_control"), cex=0.8,col=c(exp_col,cont_col), pch=21:22, lty=1:2);
dev.off(); #turns postscript off

tiff("Histogram_of_HP2_control_at_or_below_1.100.tiff");
hist(contRdna_at_or_below_1.100, breaks=100, col=cont_col, main="Histogram of HP2_control values at_or_below 1.100");
legend("topleft", c("HP2","HP2_control"), cex=0.8,col=c(exp_col,cont_col), pch=21:22, lty=1:2);
dev.off(); #turns postscript off






# cd /Users/joel/Desktop/6_10_09_imagesprocessed_with_sylvain/Processed/
# source("stats_sylvain_absolute_number.txt")
# Set threshold for group

thr <- 1.200;

# Process control
cont <- read.table("/Users/joel/Desktop/6_10_09_imagesprocessed_with_sylvain/Processed/HP2_control/processed/fitc/foci_summary.txt",header = TRUE);
aggRdna = aggregate(cont$Rdna,by=list(cont$NucID,cont$Filename),FUN=mean)
pos_RdnaC <- matrix(0,nrow=aggRdna$Group.1,ncol=1);
total_RdnaC <- matrix(0,nrow=aggRdna$Group.1,ncol=1);

for (i in 1:length(aggRdna$Group.1))
pos_RdnaC[i] <- sum((cont$NucID==aggRdna$Group.1[i])&(cont$Filename==aggRdna$Group.2[i])&(cont$Rdna>1.200));

for (i in 1:length(aggRdna$Group.1))
total_RdnaC[i] <- sum((cont$NucID==aggRdna$Group.1[i])&(cont$Filename==aggRdna$Group.2[i])&(cont$Rdna>0));

Perc_pos_Rdna_cont = pos_RdnaC; # number of foci above 1.200 per nucleus
Perc_pos_Rdna_cont_f = pos_RdnaC/total_RdnaC;

# Process experiment
exp <- read.table("/Users/joel/Desktop/6_10_09_imagesprocessed_with_sylvain/Processed/HP2/processed/fitc/foci_summary.txt",header = TRUE);
aggRdna = aggregate(exp$Rdna,by=list(exp$NucID,exp$Filename),FUN=mean)
pos_Rdna <- matrix(0,nrow=aggRdna$Group.1,ncol=1);
total_Rdna <- matrix(0,nrow=aggRdna$Group.1,ncol=1);

for (i in 1:length(aggRdna$Group.1))
pos_Rdna[i] <- sum((exp$NucID==aggRdna$Group.1[i])&(exp$Filename==aggRdna$Group.2[i])&(exp$Rdna>1.200));

for (i in 1:length(aggRdna$Group.1))
total_Rdna[i] <- sum((exp$NucID==aggRdna$Group.1[i])&(exp$Filename==aggRdna$Group.2[i])&(exp$Rdna>0));

Perc_pos_Rdna_exp = pos_Rdna; # gives number of foci in a nucleus above a given Rdna value which is defined by 1.200
Perc_pos_Rdna_exp_f = pos_Rdna/total_Rdna; # gives fraction of foci in a nucleus above a given Rdna value which is defined by 1.200




postscript("HP2_above_1.200_boxplot.ps"); #turns postscript on to save file to location in ""
boxplot(Perc_pos_Rdna_exp, Perc_pos_Rdna_cont, ylab= "number of foci per nucleus where Rdna > 1.200", xlab="Left is HP2, right is control"); #makes boxplot
dev.off(); #turns postscript off

postscript("HP2_above_1.200_qqplot.ps"); #turns postscript on to save file to location in ""
qqplot(Perc_pos_Rdna_exp, Perc_pos_Rdna_cont, main ="number of foci per nucleus where Rdna > 1.200"); #makes qqplot
dev.off(); #turns postscript off


postscript("HP2_above_1.200_boxplot_fraction.ps"); #turns postscript on to save file to location in ""
boxplot(Perc_pos_Rdna_exp_f, Perc_pos_Rdna_cont_f, ylab= "fraction of foci per nucleus where Rdna > 1.200", xlab="Left is HP2, right is control"); #makes boxplot
dev.off(); #turns postscript off

postscript("HP2_above_1.200_qqplot_fraction.ps"); #turns postscript on to save file to location in ""
qqplot(Perc_pos_Rdna_exp_f, Perc_pos_Rdna_cont_f, main ="fraction of foci per nucleus where Rdna > 1.200"); #makes qqplot
dev.off(); #turns postscript off




exp_above_1.200 <- Perc_pos_Rdna_exp;
cntrl_above_1.200 <- Perc_pos_Rdna_cont;


# performs above analysis for values less than or equal to the threshold
# Process control
cont <- read.table("/Users/joel/Desktop/6_10_09_imagesprocessed_with_sylvain/Processed/HP2_control/processed/fitc/foci_summary.txt",header = TRUE);
aggRdna = aggregate(cont$Rdna,by=list(cont$NucID,cont$Filename),FUN=mean)
pos_RdnaC <- matrix(0,nrow=aggRdna$Group.1,ncol=1);
total_RdnaC <- matrix(0,nrow=aggRdna$Group.1,ncol=1);

for (i in 1:length(aggRdna$Group.1))
pos_RdnaC[i] <- sum((cont$NucID==aggRdna$Group.1[i])&(cont$Filename==aggRdna$Group.2[i])&(cont$Rdna<=1.200));

for (i in 1:length(aggRdna$Group.1))
total_RdnaC[i] <- sum((cont$NucID==aggRdna$Group.1[i])&(cont$Filename==aggRdna$Group.2[i])&(cont$Rdna>0));

Perc_pos_Rdna_cont = pos_RdnaC;
Perc_pos_Rdna_cont_f = pos_RdnaC/total_RdnaC;


# Process experiment
exp <- read.table("/Users/joel/Desktop/6_10_09_imagesprocessed_with_sylvain/Processed/HP2/processed/fitc/foci_summary.txt",header = TRUE);
aggRdna = aggregate(exp$Rdna,by=list(exp$NucID,exp$Filename),FUN=mean)
pos_Rdna <- matrix(0,nrow=aggRdna$Group.1,ncol=1);
total_Rdna <- matrix(0,nrow=aggRdna$Group.1,ncol=1);

for (i in 1:length(aggRdna$Group.1))
pos_Rdna[i] <- sum((exp$NucID==aggRdna$Group.1[i])&(exp$Filename==aggRdna$Group.2[i])&(exp$Rdna<=1.200));

for (i in 1:length(aggRdna$Group.1))
total_Rdna[i] <- sum((exp$NucID==aggRdna$Group.1[i])&(exp$Filename==aggRdna$Group.2[i])&(exp$Rdna>0));

Perc_pos_Rdna_exp = pos_Rdna; #gives fraction of foci in a nucleus above a given Rdna value which is defined by thr
Perc_pos_Rdna_exp_f = pos_Rdna/total_Rdna;

postscript("HP2_at_or_below_1.200_boxplot<=.ps"); #turns postscript on to save file to location in ""
boxplot(Perc_pos_Rdna_exp, Perc_pos_Rdna_cont, ylab= "number of foci per nucleus where Rdna < or = 1.200", xlab="Left is HP2, right is control"); #makes boxplot
dev.off(); #turns postscript off

postscript("HP2_at_or_below_1.200_qqplot<=.ps"); #turns postscript on to save file to location in ""
qqplot(Perc_pos_Rdna_cont, Perc_pos_Rdna_exp, main="number of foci per nucleus where Rdna < or = 1.200"); #makes qqplot
dev.off(); #turns postscript off

postscript("HP2_at_or_below_1.200_boxplot_fraction.ps"); #turns postscript on to save file to location in ""
boxplot(Perc_pos_Rdna_exp_f, Perc_pos_Rdna_cont_f, ylab= "fraction of foci per nucleus where Rdna < or = 1.200", xlab="Left is HP2, right is control"); #makes boxplot
dev.off(); #turns postscript off

postscript("HP2_at_or_below_1.200_qqplot_fraction.ps"); #turns postscript on to save file to location in ""
qqplot(Perc_pos_Rdna_exp_f, Perc_pos_Rdna_cont_f, main="fraction of foci per nucleus where Rdna < or = 1.200"); #makes qqplot
dev.off(); #turns postscript off


# Calculation of stats above and below thr

sink("stat_tests_above_and_less_or_equal_to_1.200_output.txt");
 
contRdna_above_1.200 <- cont$Rdna[(cont$Rdna>1.200)]; # Extracts values above 1.200 and puts it in contRdna_above_1.200
expRdna_above_1.200 <- exp$Rdna[(exp$Rdna>1.200)];
print(shapiro.test(expRdna_above_1.200));
print(shapiro.test(contRdna_above_1.200));
print(t.test(contRdna_above_1.200,expRdna_above_1.200));
print(wilcox.test(contRdna_above_1.200,expRdna_above_1.200));

contRdna_at_or_below_1.200 <- cont$Rdna[(cont$Rdna<=1.200)];
expRdna_at_or_below_1.200 <- exp$Rdna[(exp$Rdna<=1.200)];
print(shapiro.test(expRdna_at_or_below_1.200));
print(shapiro.test(contRdna_at_or_below_1.200));
print(t.test(contRdna_at_or_below_1.200,expRdna_at_or_below_1.200));
print(wilcox.test(contRdna_at_or_below_1.200,expRdna_at_or_below_1.200));

sink();

postscript("HP2_Rdna_above_1.200_thr_boxplot_z.ps");
boxplot(expRdna_above_1.200,contRdna_above_1.200, ylab= "average Rdna per nucleus where Rdna is > 1.200", xlab="Left is HP2, right is control");
dev.off();

postscript("HP2_Rdna_at_or_below_1.200_thr_boxplot_z.ps");
boxplot(expRdna_at_or_below_1.200,contRdna_at_or_below_1.200, ylab= "average Rdna per nucleus where Rdna is < or = 1.200", xlab="Left is HP2, right is control");
dev.off();




##########names

exp_col<-rgb(1,0,0,.75); #assigns color and alpha value to exp data points
cont_col<-rgb(0,0,1,.5);

tiff(file="Histogram_of_HP2_and_GFP_control_above_1.200.tiff");
hist(expRdna_above_1.200, breaks=100, col=exp_col, main="Histogram of HP2 and GFP control Rdna values above 1.200");
hist(contRdna_above_1.200, breaks=100, col=cont_col, add=TRUE);
legend("topleft", c("HP2","HP2_control"), cex=0.8,col=c(exp_col,cont_col), pch=21:22, lty=1:2);
dev.off(); #turns postscript off

tiff(file="Histogram_of_HP2_above_1.200.tiff")
hist(expRdna_above_1.200, breaks=100, col=exp_col, main="Histogram of HP2 values above 1.200");
legend("topleft", c("HP2","HP2_control"), cex=0.8,col=c(exp_col,cont_col), pch=21:22, lty=1:2);
dev.off(); #turns postscript off

tiff("Histogram_of_HP2_control_above_1.200.tiff")
hist(contRdna_above_1.200, breaks=100, col=cont_col, main="Histogram of HP2_control values above 1.200");
legend("topleft", c("HP2","HP2_control"), cex=0.8,col=c(exp_col,cont_col), pch=21:22, lty=1:2);
dev.off(); #turns postscript off




tiff(file="Histogram_of_HP2_and_GFP_control_at_or_below_1.200.tiff");
hist(expRdna_at_or_below_1.200, breaks=100, col=exp_col, main="Histogram of HP2 and GFP control Rdna values at_or_below 1.200");
hist(contRdna_at_or_below_1.200, breaks=100, col=cont_col, add=TRUE);
legend("topleft", c("HP2","HP2_control"), cex=0.8,col=c(exp_col,cont_col), pch=21:22, lty=1:2);
dev.off(); #turns postscript off

tiff(file="Histogram_of_HP2_at_or_below_1.200.tiff")
hist(expRdna_at_or_below_1.200, breaks=100, col=exp_col, main="Histogram of HP2 values at_or_below 1.200");
legend("topleft", c("HP2","HP2_control"), cex=0.8,col=c(exp_col,cont_col), pch=21:22, lty=1:2);
dev.off(); #turns postscript off

tiff("Histogram_of_HP2_control_at_or_below_1.200.tiff")
hist(contRdna_at_or_below_1.200, breaks=100, col=cont_col, main="Histogram of HP2_control values at_or_below 1.200");
legend("topleft", c("HP2","HP2_control"), cex=0.8,col=c(exp_col,cont_col), pch=21:22, lty=1:2);
dev.off(); #turns postscript off





# cd /Users/joel/Desktop/6_10_09_imagesprocessed_with_sylvain/Processed/
# source("stats_sylvain_absolute_number.txt")
# Set threshold for group

#########  thr <- 1.300

thr <- 1.300;

# Process control
cont <- read.table("/Users/joel/Desktop/6_10_09_imagesprocessed_with_sylvain/Processed/HP2_control/processed/fitc/foci_summary.txt",header = TRUE);
aggRdna = aggregate(cont$Rdna,by=list(cont$NucID,cont$Filename),FUN=mean)
pos_RdnaC <- matrix(0,nrow=aggRdna$Group.1,ncol=1);
total_RdnaC <- matrix(0,nrow=aggRdna$Group.1,ncol=1);

for (i in 1:length(aggRdna$Group.1))
pos_RdnaC[i] <- sum((cont$NucID==aggRdna$Group.1[i])&(cont$Filename==aggRdna$Group.2[i])&(cont$Rdna>1.300));

for (i in 1:length(aggRdna$Group.1))
total_RdnaC[i] <- sum((cont$NucID==aggRdna$Group.1[i])&(cont$Filename==aggRdna$Group.2[i])&(cont$Rdna>0));

Perc_pos_Rdna_cont = pos_RdnaC; # number of foci above 1.300 per nucleus
Perc_pos_Rdna_cont_f = pos_RdnaC/total_RdnaC;

# Process experiment
exp <- read.table("/Users/joel/Desktop/6_10_09_imagesprocessed_with_sylvain/Processed/HP2/processed/fitc/foci_summary.txt",header = TRUE);
aggRdna = aggregate(exp$Rdna,by=list(exp$NucID,exp$Filename),FUN=mean)
pos_Rdna <- matrix(0,nrow=aggRdna$Group.1,ncol=1);
total_Rdna <- matrix(0,nrow=aggRdna$Group.1,ncol=1);

for (i in 1:length(aggRdna$Group.1))
pos_Rdna[i] <- sum((exp$NucID==aggRdna$Group.1[i])&(exp$Filename==aggRdna$Group.2[i])&(exp$Rdna>1.300));

for (i in 1:length(aggRdna$Group.1))
total_Rdna[i] <- sum((exp$NucID==aggRdna$Group.1[i])&(exp$Filename==aggRdna$Group.2[i])&(exp$Rdna>0));

Perc_pos_Rdna_exp = pos_Rdna; # gives number of foci in a nucleus above a given Rdna value which is defined by 1.300
Perc_pos_Rdna_exp_f = pos_Rdna/total_Rdna; # gives fraction of foci in a nucleus above a given Rdna value which is defined by 1.300




postscript("HP2_above_1.300_boxplot.ps"); #turns postscript on to save file to location in ""
boxplot(Perc_pos_Rdna_exp, Perc_pos_Rdna_cont, ylab= "number of foci per nucleus where Rdna > 1.300", xlab="Left is HP2, right is control"); #makes boxplot
dev.off(); #turns postscript off

postscript("HP2_above_1.300_qqplot.ps"); #turns postscript on to save file to location in ""
qqplot(Perc_pos_Rdna_exp, Perc_pos_Rdna_cont, main ="number of foci per nucleus where Rdna > 1.300"); #makes qqplot
dev.off(); #turns postscript off


postscript("HP2_above_1.300_boxplot_fraction.ps"); #turns postscript on to save file to location in ""
boxplot(Perc_pos_Rdna_exp_f, Perc_pos_Rdna_cont_f, ylab= "fraction of foci per nucleus where Rdna > 1.300", xlab="Left is HP2, right is control"); #makes boxplot
dev.off(); #turns postscript off

postscript("HP2_above_1.300_qqplot_fraction.ps"); #turns postscript on to save file to location in ""
qqplot(Perc_pos_Rdna_exp_f, Perc_pos_Rdna_cont_f, main ="fraction of foci per nucleus where Rdna > 1.300"); #makes qqplot
dev.off(); #turns postscript off




exp_above_1.300 <- Perc_pos_Rdna_exp;
cntrl_above_1.300 <- Perc_pos_Rdna_cont;


# performs above analysis for values less than or equal to the threshold
# Process control
cont <- read.table("/Users/joel/Desktop/6_10_09_imagesprocessed_with_sylvain/Processed/HP2_control/processed/fitc/foci_summary.txt",header = TRUE);
aggRdna = aggregate(cont$Rdna,by=list(cont$NucID,cont$Filename),FUN=mean)
pos_RdnaC <- matrix(0,nrow=aggRdna$Group.1,ncol=1);
total_RdnaC <- matrix(0,nrow=aggRdna$Group.1,ncol=1);

for (i in 1:length(aggRdna$Group.1))
pos_RdnaC[i] <- sum((cont$NucID==aggRdna$Group.1[i])&(cont$Filename==aggRdna$Group.2[i])&(cont$Rdna<=1.300));

for (i in 1:length(aggRdna$Group.1))
total_RdnaC[i] <- sum((cont$NucID==aggRdna$Group.1[i])&(cont$Filename==aggRdna$Group.2[i])&(cont$Rdna>0));

Perc_pos_Rdna_cont = pos_RdnaC;
Perc_pos_Rdna_cont_f = pos_RdnaC/total_RdnaC;


# Process experiment
exp <- read.table("/Users/joel/Desktop/6_10_09_imagesprocessed_with_sylvain/Processed/HP2/processed/fitc/foci_summary.txt",header = TRUE);
aggRdna = aggregate(exp$Rdna,by=list(exp$NucID,exp$Filename),FUN=mean)
pos_Rdna <- matrix(0,nrow=aggRdna$Group.1,ncol=1);
total_Rdna <- matrix(0,nrow=aggRdna$Group.1,ncol=1);

for (i in 1:length(aggRdna$Group.1))
pos_Rdna[i] <- sum((exp$NucID==aggRdna$Group.1[i])&(exp$Filename==aggRdna$Group.2[i])&(exp$Rdna<=1.300));

for (i in 1:length(aggRdna$Group.1))
total_Rdna[i] <- sum((exp$NucID==aggRdna$Group.1[i])&(exp$Filename==aggRdna$Group.2[i])&(exp$Rdna>0));

Perc_pos_Rdna_exp = pos_Rdna; #gives fraction of foci in a nucleus above a given Rdna value which is defined by thr
Perc_pos_Rdna_exp_f = pos_Rdna/total_Rdna;

postscript("HP2_at_or_below_1.300_boxplot<=.ps"); #turns postscript on to save file to location in ""
boxplot(Perc_pos_Rdna_exp, Perc_pos_Rdna_cont, ylab= "number of foci per nucleus where Rdna < or = 1.300", xlab="Left is HP2, right is control"); #makes boxplot
dev.off(); #turns postscript off

postscript("HP2_at_or_below_1.300_qqplot<=.ps"); #turns postscript on to save file to location in ""
qqplot(Perc_pos_Rdna_cont, Perc_pos_Rdna_exp, main="number of foci per nucleus where Rdna < or = 1.300"); #makes qqplot
dev.off(); #turns postscript off

postscript("HP2_at_or_below_1.300_boxplot_fraction.ps"); #turns postscript on to save file to location in ""
boxplot(Perc_pos_Rdna_exp_f, Perc_pos_Rdna_cont_f, ylab= "fraction of foci per nucleus where Rdna < or = 1.300", xlab="Left is HP2, right is control"); #makes boxplot
dev.off(); #turns postscript off

postscript("HP2_at_or_below_1.300_qqplot_fraction.ps"); #turns postscript on to save file to location in ""
qqplot(Perc_pos_Rdna_exp_f, Perc_pos_Rdna_cont_f, main="fraction of foci per nucleus where Rdna < or = 1.300"); #makes qqplot
dev.off(); #turns postscript off


# Calculation of stats above and below thr

sink("stat_tests_above_and_less_or_equal_to_1.300_output.txt");
 
contRdna_above_1.300 <- cont$Rdna[(cont$Rdna>1.300)]; # Extracts values above 1.300 and puts it in contRdna_above_1.300
expRdna_above_1.300 <- exp$Rdna[(exp$Rdna>1.300)];
print(shapiro.test(expRdna_above_1.300));
print(shapiro.test(contRdna_above_1.300));
print(t.test(contRdna_above_1.300,expRdna_above_1.300));
print(wilcox.test(contRdna_above_1.300,expRdna_above_1.300));

contRdna_at_or_below_1.300 <- cont$Rdna[(cont$Rdna<=1.300)];
expRdna_at_or_below_1.300 <- exp$Rdna[(exp$Rdna<=1.300)];
print(shapiro.test(expRdna_at_or_below_1.300));
print(shapiro.test(contRdna_at_or_below_1.300));
print(t.test(contRdna_at_or_below_1.300,expRdna_at_or_below_1.300));
print(wilcox.test(contRdna_at_or_below_1.300,expRdna_at_or_below_1.300));

sink();

postscript("HP2_Rdna_above_1.300_thr_boxplot_z.ps");
boxplot(expRdna_above_1.300,contRdna_above_1.300, ylab= "average Rdna per nucleus where Rdna is > 1.300", xlab="Left is HP2, right is control");
dev.off();

postscript("HP2_Rdna_at_or_below_1.300_thr_boxplot_z.ps");
boxplot(expRdna_at_or_below_1.300,contRdna_at_or_below_1.300, ylab= "average Rdna per nucleus where Rdna is < or = 1.300", xlab="Left is HP2, right is control");
dev.off();




##########names

exp_col<-rgb(1,0,0,.75); #assigns color and alpha value to exp data points
cont_col<-rgb(0,0,1,.5);

tiff(file="Histogram_of_HP2_and_GFP_control_above_1.300.tiff");
hist(expRdna_above_1.300, breaks=100, col=exp_col, main="Histogram of HP2 and GFP control Rdna values above 1.300");
hist(contRdna_above_1.300, breaks=100, col=cont_col, add=TRUE);
legend("topleft", c("HP2","HP2_control"), cex=0.8,col=c(exp_col,cont_col), pch=21:22, lty=1:2);
dev.off(); #turns postscript off

tiff(file="Histogram_of_HP2_above_1.300.tiff")
hist(expRdna_above_1.300, breaks=100, col=exp_col, main="Histogram of HP2 values above 1.300");
legend("topleft", c("HP2","HP2_control"), cex=0.8,col=c(exp_col,cont_col), pch=21:22, lty=1:2);
dev.off(); #turns postscript off

tiff("Histogram_of_HP2_control_above_1.300.tiff")
hist(contRdna_above_1.300, breaks=100, col=cont_col, main="Histogram of HP2_control values above 1.300");
legend("topleft", c("HP2","HP2_control"), cex=0.8,col=c(exp_col,cont_col), pch=21:22, lty=1:2);
dev.off(); #turns postscript off




tiff(file="Histogram_of_HP2_and_GFP_control_at_or_below_1.300.tiff");
hist(expRdna_at_or_below_1.300, breaks=100, col=exp_col, main="Histogram of HP2 and GFP control Rdna values at_or_below 1.300");
hist(contRdna_at_or_below_1.300, breaks=100, col=cont_col, add=TRUE);
legend("topleft", c("HP2","HP2_control"), cex=0.8,col=c(exp_col,cont_col), pch=21:22, lty=1:2);
dev.off(); #turns postscript off

tiff(file="Histogram_of_HP2_at_or_below_1.300.tiff")
hist(expRdna_at_or_below_1.300, breaks=100, col=exp_col, main="Histogram of HP2 values at_or_below 1.300");
legend("topleft", c("HP2","HP2_control"), cex=0.8,col=c(exp_col,cont_col), pch=21:22, lty=1:2);
dev.off(); #turns postscript off

tiff("Histogram_of_HP2_control_at_or_below_1.300.tiff")
hist(contRdna_at_or_below_1.300, breaks=100, col=cont_col, main="Histogram of HP2_control values at_or_below 1.300");
legend("topleft", c("HP2","HP2_control"), cex=0.8,col=c(exp_col,cont_col), pch=21:22, lty=1:2);
dev.off(); #turns postscript off




# cd /Users/joel/Desktop/6_10_09_imagesprocessed_with_sylvain/Processed/
# source("stats_sylvain_absolute_number.txt")
# Set threshold for group

#########  thr <- 1.400

thr <- 1.400;

# Process control
cont <- read.table("/Users/joel/Desktop/6_10_09_imagesprocessed_with_sylvain/Processed/HP2_control/processed/fitc/foci_summary.txt",header = TRUE);
aggRdna = aggregate(cont$Rdna,by=list(cont$NucID,cont$Filename),FUN=mean)
pos_RdnaC <- matrix(0,nrow=aggRdna$Group.1,ncol=1);
total_RdnaC <- matrix(0,nrow=aggRdna$Group.1,ncol=1);

for (i in 1:length(aggRdna$Group.1))
pos_RdnaC[i] <- sum((cont$NucID==aggRdna$Group.1[i])&(cont$Filename==aggRdna$Group.2[i])&(cont$Rdna>1.400));

for (i in 1:length(aggRdna$Group.1))
total_RdnaC[i] <- sum((cont$NucID==aggRdna$Group.1[i])&(cont$Filename==aggRdna$Group.2[i])&(cont$Rdna>0));

Perc_pos_Rdna_cont = pos_RdnaC; # number of foci above 1.400 per nucleus
Perc_pos_Rdna_cont_f = pos_RdnaC/total_RdnaC;

# Process experiment
exp <- read.table("/Users/joel/Desktop/6_10_09_imagesprocessed_with_sylvain/Processed/HP2/processed/fitc/foci_summary.txt",header = TRUE);
aggRdna = aggregate(exp$Rdna,by=list(exp$NucID,exp$Filename),FUN=mean)
pos_Rdna <- matrix(0,nrow=aggRdna$Group.1,ncol=1);
total_Rdna <- matrix(0,nrow=aggRdna$Group.1,ncol=1);

for (i in 1:length(aggRdna$Group.1))
pos_Rdna[i] <- sum((exp$NucID==aggRdna$Group.1[i])&(exp$Filename==aggRdna$Group.2[i])&(exp$Rdna>1.400));

for (i in 1:length(aggRdna$Group.1))
total_Rdna[i] <- sum((exp$NucID==aggRdna$Group.1[i])&(exp$Filename==aggRdna$Group.2[i])&(exp$Rdna>0));

Perc_pos_Rdna_exp = pos_Rdna; # gives number of foci in a nucleus above a given Rdna value which is defined by 1.400
Perc_pos_Rdna_exp_f = pos_Rdna/total_Rdna; # gives fraction of foci in a nucleus above a given Rdna value which is defined by 1.400




postscript("HP2_above_1.400_boxplot.ps"); #turns postscript on to save file to location in ""
boxplot(Perc_pos_Rdna_exp, Perc_pos_Rdna_cont, ylab= "number of foci per nucleus where Rdna > 1.400", xlab="Left is HP2, right is control"); #makes boxplot
dev.off(); #turns postscript off

postscript("HP2_above_1.400_qqplot.ps"); #turns postscript on to save file to location in ""
qqplot(Perc_pos_Rdna_exp, Perc_pos_Rdna_cont, main ="number of foci per nucleus where Rdna > 1.400"); #makes qqplot
dev.off(); #turns postscript off


postscript("HP2_above_1.400_boxplot_fraction.ps"); #turns postscript on to save file to location in ""
boxplot(Perc_pos_Rdna_exp_f, Perc_pos_Rdna_cont_f, ylab= "fraction of foci per nucleus where Rdna > 1.400", xlab="Left is HP2, right is control"); #makes boxplot
dev.off(); #turns postscript off

postscript("HP2_above_1.400_qqplot_fraction.ps"); #turns postscript on to save file to location in ""
qqplot(Perc_pos_Rdna_exp_f, Perc_pos_Rdna_cont_f, main ="fraction of foci per nucleus where Rdna > 1.400"); #makes qqplot
dev.off(); #turns postscript off




exp_above_1.400 <- Perc_pos_Rdna_exp;
cntrl_above_1.400 <- Perc_pos_Rdna_cont;


# performs above analysis for values less than or equal to the threshold
# Process control
cont <- read.table("/Users/joel/Desktop/6_10_09_imagesprocessed_with_sylvain/Processed/HP2_control/processed/fitc/foci_summary.txt",header = TRUE);
aggRdna = aggregate(cont$Rdna,by=list(cont$NucID,cont$Filename),FUN=mean)
pos_RdnaC <- matrix(0,nrow=aggRdna$Group.1,ncol=1);
total_RdnaC <- matrix(0,nrow=aggRdna$Group.1,ncol=1);

for (i in 1:length(aggRdna$Group.1))
pos_RdnaC[i] <- sum((cont$NucID==aggRdna$Group.1[i])&(cont$Filename==aggRdna$Group.2[i])&(cont$Rdna<=1.400));

for (i in 1:length(aggRdna$Group.1))
total_RdnaC[i] <- sum((cont$NucID==aggRdna$Group.1[i])&(cont$Filename==aggRdna$Group.2[i])&(cont$Rdna>0));

Perc_pos_Rdna_cont = pos_RdnaC;
Perc_pos_Rdna_cont_f = pos_RdnaC/total_RdnaC;


# Process experiment
exp <- read.table("/Users/joel/Desktop/6_10_09_imagesprocessed_with_sylvain/Processed/HP2/processed/fitc/foci_summary.txt",header = TRUE);
aggRdna = aggregate(exp$Rdna,by=list(exp$NucID,exp$Filename),FUN=mean)
pos_Rdna <- matrix(0,nrow=aggRdna$Group.1,ncol=1);
total_Rdna <- matrix(0,nrow=aggRdna$Group.1,ncol=1);

for (i in 1:length(aggRdna$Group.1))
pos_Rdna[i] <- sum((exp$NucID==aggRdna$Group.1[i])&(exp$Filename==aggRdna$Group.2[i])&(exp$Rdna<=1.400));

for (i in 1:length(aggRdna$Group.1))
total_Rdna[i] <- sum((exp$NucID==aggRdna$Group.1[i])&(exp$Filename==aggRdna$Group.2[i])&(exp$Rdna>0));

Perc_pos_Rdna_exp = pos_Rdna; #gives fraction of foci in a nucleus above a given Rdna value which is defined by thr
Perc_pos_Rdna_exp_f = pos_Rdna/total_Rdna;

postscript("HP2_at_or_below_1.400_boxplot<=.ps"); #turns postscript on to save file to location in ""
boxplot(Perc_pos_Rdna_exp, Perc_pos_Rdna_cont, ylab= "number of foci per nucleus where Rdna < or = 1.400", xlab="Left is HP2, right is control"); #makes boxplot
dev.off(); #turns postscript off

postscript("HP2_at_or_below_1.400_qqplot<=.ps"); #turns postscript on to save file to location in ""
qqplot(Perc_pos_Rdna_cont, Perc_pos_Rdna_exp, main="number of foci per nucleus where Rdna < or = 1.400"); #makes qqplot
dev.off(); #turns postscript off

postscript("HP2_at_or_below_1.400_boxplot_fraction.ps"); #turns postscript on to save file to location in ""
boxplot(Perc_pos_Rdna_exp_f, Perc_pos_Rdna_cont_f, ylab= "fraction of foci per nucleus where Rdna < or = 1.400", xlab="Left is HP2, right is control"); #makes boxplot
dev.off(); #turns postscript off

postscript("HP2_at_or_below_1.400_qqplot_fraction.ps"); #turns postscript on to save file to location in ""
qqplot(Perc_pos_Rdna_exp_f, Perc_pos_Rdna_cont_f, main="fraction of foci per nucleus where Rdna < or = 1.400"); #makes qqplot
dev.off(); #turns postscript off


# Calculation of stats above and below thr

sink("stat_tests_above_and_less_or_equal_to_1.400_output.txt");
 
contRdna_above_1.400 <- cont$Rdna[(cont$Rdna>1.400)]; # Extracts values above 1.400 and puts it in contRdna_above_1.400
expRdna_above_1.400 <- exp$Rdna[(exp$Rdna>1.400)];
print(shapiro.test(expRdna_above_1.400));
print(shapiro.test(contRdna_above_1.400));
print(t.test(contRdna_above_1.400,expRdna_above_1.400));
print(wilcox.test(contRdna_above_1.400,expRdna_above_1.400));

contRdna_at_or_below_1.400 <- cont$Rdna[(cont$Rdna<=1.400)];
expRdna_at_or_below_1.400 <- exp$Rdna[(exp$Rdna<=1.400)];
print(shapiro.test(expRdna_at_or_below_1.400));
print(shapiro.test(contRdna_at_or_below_1.400));
print(t.test(contRdna_at_or_below_1.400,expRdna_at_or_below_1.400));
print(wilcox.test(contRdna_at_or_below_1.400,expRdna_at_or_below_1.400));

sink();

postscript("HP2_Rdna_above_1.400_thr_boxplot_z.ps");
boxplot(expRdna_above_1.400,contRdna_above_1.400, ylab= "average Rdna per nucleus where Rdna is > 1.400", xlab="Left is HP2, right is control");
dev.off();

postscript("HP2_Rdna_at_or_below_1.400_thr_boxplot_z.ps");
boxplot(expRdna_at_or_below_1.400,contRdna_at_or_below_1.400, ylab= "average Rdna per nucleus where Rdna is < or = 1.400", xlab="Left is HP2, right is control");
dev.off();




##########names

exp_col<-rgb(1,0,0,.75); #assigns color and alpha value to exp data points
cont_col<-rgb(0,0,1,.5);

tiff(file="Histogram_of_HP2_and_GFP_control_above_1.400.tiff");
hist(expRdna_above_1.400, breaks=100, col=exp_col, main="Histogram of HP2 and GFP control Rdna values above 1.400");
hist(contRdna_above_1.400, breaks=100, col=cont_col, add=TRUE);
legend("topleft", c("HP2","HP2_control"), cex=0.8,col=c(exp_col,cont_col), pch=21:22, lty=1:2);
dev.off(); #turns postscript off

tiff(file="Histogram_of_HP2_above_1.400.tiff")
hist(expRdna_above_1.400, breaks=100, col=exp_col, main="Histogram of HP2 values above 1.400");
legend("topleft", c("HP2","HP2_control"), cex=0.8,col=c(exp_col,cont_col), pch=21:22, lty=1:2);
dev.off(); #turns postscript off

tiff("Histogram_of_HP2_control_above_1.400.tiff")
hist(contRdna_above_1.400, breaks=100, col=cont_col, main="Histogram of HP2_control values above 1.400");
legend("topleft", c("HP2","HP2_control"), cex=0.8,col=c(exp_col,cont_col), pch=21:22, lty=1:2);
dev.off(); #turns postscript off




tiff(file="Histogram_of_HP2_and_GFP_control_at_or_below_1.400.tiff");
hist(expRdna_at_or_below_1.400, breaks=100, col=exp_col, main="Histogram of HP2 and GFP control Rdna values at_or_below 1.400");
hist(contRdna_at_or_below_1.400, breaks=100, col=cont_col, add=TRUE);
legend("topleft", c("HP2","HP2_control"), cex=0.8,col=c(exp_col,cont_col), pch=21:22, lty=1:2);
dev.off(); #turns postscript off

tiff(file="Histogram_of_HP2_at_or_below_1.400.tiff")
hist(expRdna_at_or_below_1.400, breaks=100, col=exp_col, main="Histogram of HP2 values at_or_below 1.400");
legend("topleft", c("HP2","HP2_control"), cex=0.8,col=c(exp_col,cont_col), pch=21:22, lty=1:2);
dev.off(); #turns postscript off

tiff("Histogram_of_HP2_control_at_or_below_1.400.tiff")
hist(contRdna_at_or_below_1.400, breaks=100, col=cont_col, main="Histogram of HP2_control values at_or_below 1.400");
legend("topleft", c("HP2","HP2_control"), cex=0.8,col=c(exp_col,cont_col), pch=21:22, lty=1:2);
dev.off(); #turns postscript off




# cd /Users/joel/Desktop/6_10_09_imagesprocessed_with_sylvain/Processed/
# source("stats_sylvain_absolute_number.txt")
# Set threshold for group

#########  thr <- 1.500

thr <- 1.500;

# Process control
cont <- read.table("/Users/joel/Desktop/6_10_09_imagesprocessed_with_sylvain/Processed/HP2_control/processed/fitc/foci_summary.txt",header = TRUE);
aggRdna = aggregate(cont$Rdna,by=list(cont$NucID,cont$Filename),FUN=mean)
pos_RdnaC <- matrix(0,nrow=aggRdna$Group.1,ncol=1);
total_RdnaC <- matrix(0,nrow=aggRdna$Group.1,ncol=1);

for (i in 1:length(aggRdna$Group.1))
pos_RdnaC[i] <- sum((cont$NucID==aggRdna$Group.1[i])&(cont$Filename==aggRdna$Group.2[i])&(cont$Rdna>1.500));

for (i in 1:length(aggRdna$Group.1))
total_RdnaC[i] <- sum((cont$NucID==aggRdna$Group.1[i])&(cont$Filename==aggRdna$Group.2[i])&(cont$Rdna>0));

Perc_pos_Rdna_cont = pos_RdnaC; # number of foci above 1.500 per nucleus
Perc_pos_Rdna_cont_f = pos_RdnaC/total_RdnaC;

# Process experiment
exp <- read.table("/Users/joel/Desktop/6_10_09_imagesprocessed_with_sylvain/Processed/HP2/processed/fitc/foci_summary.txt",header = TRUE);
aggRdna = aggregate(exp$Rdna,by=list(exp$NucID,exp$Filename),FUN=mean)
pos_Rdna <- matrix(0,nrow=aggRdna$Group.1,ncol=1);
total_Rdna <- matrix(0,nrow=aggRdna$Group.1,ncol=1);

for (i in 1:length(aggRdna$Group.1))
pos_Rdna[i] <- sum((exp$NucID==aggRdna$Group.1[i])&(exp$Filename==aggRdna$Group.2[i])&(exp$Rdna>1.500));

for (i in 1:length(aggRdna$Group.1))
total_Rdna[i] <- sum((exp$NucID==aggRdna$Group.1[i])&(exp$Filename==aggRdna$Group.2[i])&(exp$Rdna>0));

Perc_pos_Rdna_exp = pos_Rdna; # gives number of foci in a nucleus above a given Rdna value which is defined by 1.500
Perc_pos_Rdna_exp_f = pos_Rdna/total_Rdna; # gives fraction of foci in a nucleus above a given Rdna value which is defined by 1.500




postscript("HP2_above_1.500_boxplot.ps"); #turns postscript on to save file to location in ""
boxplot(Perc_pos_Rdna_exp, Perc_pos_Rdna_cont, ylab= "number of foci per nucleus where Rdna > 1.500", xlab="Left is HP2, right is control"); #makes boxplot
dev.off(); #turns postscript off

postscript("HP2_above_1.500_qqplot.ps"); #turns postscript on to save file to location in ""
qqplot(Perc_pos_Rdna_exp, Perc_pos_Rdna_cont, main ="number of foci per nucleus where Rdna > 1.500"); #makes qqplot
dev.off(); #turns postscript off


postscript("HP2_above_1.500_boxplot_fraction.ps"); #turns postscript on to save file to location in ""
boxplot(Perc_pos_Rdna_exp_f, Perc_pos_Rdna_cont_f, ylab= "fraction of foci per nucleus where Rdna > 1.500", xlab="Left is HP2, right is control"); #makes boxplot
dev.off(); #turns postscript off

postscript("HP2_above_1.500_qqplot_fraction.ps"); #turns postscript on to save file to location in ""
qqplot(Perc_pos_Rdna_exp_f, Perc_pos_Rdna_cont_f, main ="fraction of foci per nucleus where Rdna > 1.500"); #makes qqplot
dev.off(); #turns postscript off




exp_above_1.500 <- Perc_pos_Rdna_exp;
cntrl_above_1.500 <- Perc_pos_Rdna_cont;


# performs above analysis for values less than or equal to the threshold
# Process control
cont <- read.table("/Users/joel/Desktop/6_10_09_imagesprocessed_with_sylvain/Processed/HP2_control/processed/fitc/foci_summary.txt",header = TRUE);
aggRdna = aggregate(cont$Rdna,by=list(cont$NucID,cont$Filename),FUN=mean)
pos_RdnaC <- matrix(0,nrow=aggRdna$Group.1,ncol=1);
total_RdnaC <- matrix(0,nrow=aggRdna$Group.1,ncol=1);

for (i in 1:length(aggRdna$Group.1))
pos_RdnaC[i] <- sum((cont$NucID==aggRdna$Group.1[i])&(cont$Filename==aggRdna$Group.2[i])&(cont$Rdna<=1.500));

for (i in 1:length(aggRdna$Group.1))
total_RdnaC[i] <- sum((cont$NucID==aggRdna$Group.1[i])&(cont$Filename==aggRdna$Group.2[i])&(cont$Rdna>0));

Perc_pos_Rdna_cont = pos_RdnaC;
Perc_pos_Rdna_cont_f = pos_RdnaC/total_RdnaC;


# Process experiment
exp <- read.table("/Users/joel/Desktop/6_10_09_imagesprocessed_with_sylvain/Processed/HP2/processed/fitc/foci_summary.txt",header = TRUE);
aggRdna = aggregate(exp$Rdna,by=list(exp$NucID,exp$Filename),FUN=mean)
pos_Rdna <- matrix(0,nrow=aggRdna$Group.1,ncol=1);
total_Rdna <- matrix(0,nrow=aggRdna$Group.1,ncol=1);

for (i in 1:length(aggRdna$Group.1))
pos_Rdna[i] <- sum((exp$NucID==aggRdna$Group.1[i])&(exp$Filename==aggRdna$Group.2[i])&(exp$Rdna<=1.500));

for (i in 1:length(aggRdna$Group.1))
total_Rdna[i] <- sum((exp$NucID==aggRdna$Group.1[i])&(exp$Filename==aggRdna$Group.2[i])&(exp$Rdna>0));

Perc_pos_Rdna_exp = pos_Rdna; #gives fraction of foci in a nucleus above a given Rdna value which is defined by thr
Perc_pos_Rdna_exp_f = pos_Rdna/total_Rdna;

postscript("HP2_at_or_below_1.500_boxplot<=.ps"); #turns postscript on to save file to location in ""
boxplot(Perc_pos_Rdna_exp, Perc_pos_Rdna_cont, ylab= "number of foci per nucleus where Rdna < or = 1.500", xlab="Left is HP2, right is control"); #makes boxplot
dev.off(); #turns postscript off

postscript("HP2_at_or_below_1.500_qqplot<=.ps"); #turns postscript on to save file to location in ""
qqplot(Perc_pos_Rdna_cont, Perc_pos_Rdna_exp, main="number of foci per nucleus where Rdna < or = 1.500"); #makes qqplot
dev.off(); #turns postscript off

postscript("HP2_at_or_below_1.500_boxplot_fraction.ps"); #turns postscript on to save file to location in ""
boxplot(Perc_pos_Rdna_exp_f, Perc_pos_Rdna_cont_f, ylab= "fraction of foci per nucleus where Rdna < or = 1.500", xlab="Left is HP2, right is control"); #makes boxplot
dev.off(); #turns postscript off

postscript("HP2_at_or_below_1.500_qqplot_fraction.ps"); #turns postscript on to save file to location in ""
qqplot(Perc_pos_Rdna_exp_f, Perc_pos_Rdna_cont_f, main="fraction of foci per nucleus where Rdna < or = 1.500"); #makes qqplot
dev.off(); #turns postscript off


# Calculation of stats above and below thr

sink("stat_tests_above_and_less_or_equal_to_1.500_output.txt");
 
contRdna_above_1.500 <- cont$Rdna[(cont$Rdna>1.500)]; # Extracts values above 1.500 and puts it in contRdna_above_1.500
expRdna_above_1.500 <- exp$Rdna[(exp$Rdna>1.500)];
print(shapiro.test(expRdna_above_1.500));
print(shapiro.test(contRdna_above_1.500));
print(t.test(contRdna_above_1.500,expRdna_above_1.500));
print(wilcox.test(contRdna_above_1.500,expRdna_above_1.500));

contRdna_at_or_below_1.500 <- cont$Rdna[(cont$Rdna<=1.500)];
expRdna_at_or_below_1.500 <- exp$Rdna[(exp$Rdna<=1.500)];
print(shapiro.test(expRdna_at_or_below_1.500));
print(shapiro.test(contRdna_at_or_below_1.500));
print(t.test(contRdna_at_or_below_1.500,expRdna_at_or_below_1.500));
print(wilcox.test(contRdna_at_or_below_1.500,expRdna_at_or_below_1.500));

sink();

postscript("HP2_Rdna_above_1.500_thr_boxplot_z.ps");
boxplot(expRdna_above_1.500,contRdna_above_1.500, ylab= "average Rdna per nucleus where Rdna is > 1.500", xlab="Left is HP2, right is control");
dev.off();

postscript("HP2_Rdna_at_or_below_1.500_thr_boxplot_z.ps");
boxplot(expRdna_at_or_below_1.500,contRdna_at_or_below_1.500, ylab= "average Rdna per nucleus where Rdna is < or = 1.500", xlab="Left is HP2, right is control");
dev.off();




##########names

exp_col<-rgb(1,0,0,.75); #assigns color and alpha value to exp data points
cont_col<-rgb(0,0,1,.5);

tiff(file="Histogram_of_HP2_and_GFP_control_above_1.500.tiff");
hist(expRdna_above_1.500, breaks=100, col=exp_col, main="Histogram of HP2 and GFP control Rdna values above 1.500");
hist(contRdna_above_1.500, breaks=100, col=cont_col, add=TRUE);
legend("topleft", c("HP2","HP2_control"), cex=0.8,col=c(exp_col,cont_col), pch=21:22, lty=1:2);
dev.off(); #turns postscript off

tiff(file="Histogram_of_HP2_above_1.500.tiff")
hist(expRdna_above_1.500, breaks=100, col=exp_col, main="Histogram of HP2 values above 1.500");
legend("topleft", c("HP2","HP2_control"), cex=0.8,col=c(exp_col,cont_col), pch=21:22, lty=1:2);
dev.off(); #turns postscript off

tiff("Histogram_of_HP2_control_above_1.500.tiff")
hist(contRdna_above_1.500, breaks=100, col=cont_col, main="Histogram of HP2_control values above 1.500");
legend("topleft", c("HP2","HP2_control"), cex=0.8,col=c(exp_col,cont_col), pch=21:22, lty=1:2);
dev.off(); #turns postscript off




tiff(file="Histogram_of_HP2_and_GFP_control_at_or_below_1.500.tiff");
hist(expRdna_at_or_below_1.500, breaks=100, col=exp_col, main="Histogram of HP2 and GFP control Rdna values at_or_below 1.500");
hist(contRdna_at_or_below_1.500, breaks=100, col=cont_col, add=TRUE);
legend("topleft", c("HP2","HP2_control"), cex=0.8,col=c(exp_col,cont_col), pch=21:22, lty=1:2);
dev.off(); #turns postscript off

tiff(file="Histogram_of_HP2_at_or_below_1.500.tiff")
hist(expRdna_at_or_below_1.500, breaks=100, col=exp_col, main="Histogram of HP2 values at_or_below 1.500");
legend("topleft", c("HP2","HP2_control"), cex=0.8,col=c(exp_col,cont_col), pch=21:22, lty=1:2);
dev.off(); #turns postscript off

tiff("Histogram_of_HP2_control_at_or_below_1.500.tiff")
hist(contRdna_at_or_below_1.500, breaks=100, col=cont_col, main="Histogram of HP2_control values at_or_below 1.500");
legend("topleft", c("HP2","HP2_control"), cex=0.8,col=c(exp_col,cont_col), pch=21:22, lty=1:2);
dev.off(); #turns postscript off



# cd /Users/joel/Desktop/6_10_09_imagesprocessed_with_sylvain/Processed/
# source("stats_sylvain_absolute_number.txt")
# Set threshold for group

#########  thr <- 1.600

thr <- 1.600;

# Process control
cont <- read.table("/Users/joel/Desktop/6_10_09_imagesprocessed_with_sylvain/Processed/HP2_control/processed/fitc/foci_summary.txt",header = TRUE);
aggRdna = aggregate(cont$Rdna,by=list(cont$NucID,cont$Filename),FUN=mean)
pos_RdnaC <- matrix(0,nrow=aggRdna$Group.1,ncol=1);
total_RdnaC <- matrix(0,nrow=aggRdna$Group.1,ncol=1);

for (i in 1:length(aggRdna$Group.1))
pos_RdnaC[i] <- sum((cont$NucID==aggRdna$Group.1[i])&(cont$Filename==aggRdna$Group.2[i])&(cont$Rdna>1.600));

for (i in 1:length(aggRdna$Group.1))
total_RdnaC[i] <- sum((cont$NucID==aggRdna$Group.1[i])&(cont$Filename==aggRdna$Group.2[i])&(cont$Rdna>0));

Perc_pos_Rdna_cont = pos_RdnaC; # number of foci above 1.600 per nucleus
Perc_pos_Rdna_cont_f = pos_RdnaC/total_RdnaC;

# Process experiment
exp <- read.table("/Users/joel/Desktop/6_10_09_imagesprocessed_with_sylvain/Processed/HP2/processed/fitc/foci_summary.txt",header = TRUE);
aggRdna = aggregate(exp$Rdna,by=list(exp$NucID,exp$Filename),FUN=mean)
pos_Rdna <- matrix(0,nrow=aggRdna$Group.1,ncol=1);
total_Rdna <- matrix(0,nrow=aggRdna$Group.1,ncol=1);

for (i in 1:length(aggRdna$Group.1))
pos_Rdna[i] <- sum((exp$NucID==aggRdna$Group.1[i])&(exp$Filename==aggRdna$Group.2[i])&(exp$Rdna>1.600));

for (i in 1:length(aggRdna$Group.1))
total_Rdna[i] <- sum((exp$NucID==aggRdna$Group.1[i])&(exp$Filename==aggRdna$Group.2[i])&(exp$Rdna>0));

Perc_pos_Rdna_exp = pos_Rdna; # gives number of foci in a nucleus above a given Rdna value which is defined by 1.600
Perc_pos_Rdna_exp_f = pos_Rdna/total_Rdna; # gives fraction of foci in a nucleus above a given Rdna value which is defined by 1.600




postscript("HP2_above_1.600_boxplot.ps"); #turns postscript on to save file to location in ""
boxplot(Perc_pos_Rdna_exp, Perc_pos_Rdna_cont, ylab= "number of foci per nucleus where Rdna > 1.600", xlab="Left is HP2, right is control"); #makes boxplot
dev.off(); #turns postscript off

postscript("HP2_above_1.600_qqplot.ps"); #turns postscript on to save file to location in ""
qqplot(Perc_pos_Rdna_exp, Perc_pos_Rdna_cont, main ="number of foci per nucleus where Rdna > 1.600"); #makes qqplot
dev.off(); #turns postscript off


postscript("HP2_above_1.600_boxplot_fraction.ps"); #turns postscript on to save file to location in ""
boxplot(Perc_pos_Rdna_exp_f, Perc_pos_Rdna_cont_f, ylab= "fraction of foci per nucleus where Rdna > 1.600", xlab="Left is HP2, right is control"); #makes boxplot
dev.off(); #turns postscript off

postscript("HP2_above_1.600_qqplot_fraction.ps"); #turns postscript on to save file to location in ""
qqplot(Perc_pos_Rdna_exp_f, Perc_pos_Rdna_cont_f, main ="fraction of foci per nucleus where Rdna > 1.600"); #makes qqplot
dev.off(); #turns postscript off




exp_above_1.600 <- Perc_pos_Rdna_exp;
cntrl_above_1.600 <- Perc_pos_Rdna_cont;


# performs above analysis for values less than or equal to the threshold
# Process control
cont <- read.table("/Users/joel/Desktop/6_10_09_imagesprocessed_with_sylvain/Processed/HP2_control/processed/fitc/foci_summary.txt",header = TRUE);
aggRdna = aggregate(cont$Rdna,by=list(cont$NucID,cont$Filename),FUN=mean)
pos_RdnaC <- matrix(0,nrow=aggRdna$Group.1,ncol=1);
total_RdnaC <- matrix(0,nrow=aggRdna$Group.1,ncol=1);

for (i in 1:length(aggRdna$Group.1))
pos_RdnaC[i] <- sum((cont$NucID==aggRdna$Group.1[i])&(cont$Filename==aggRdna$Group.2[i])&(cont$Rdna<=1.600));

for (i in 1:length(aggRdna$Group.1))
total_RdnaC[i] <- sum((cont$NucID==aggRdna$Group.1[i])&(cont$Filename==aggRdna$Group.2[i])&(cont$Rdna>0));

Perc_pos_Rdna_cont = pos_RdnaC;
Perc_pos_Rdna_cont_f = pos_RdnaC/total_RdnaC;


# Process experiment
exp <- read.table("/Users/joel/Desktop/6_10_09_imagesprocessed_with_sylvain/Processed/HP2/processed/fitc/foci_summary.txt",header = TRUE);
aggRdna = aggregate(exp$Rdna,by=list(exp$NucID,exp$Filename),FUN=mean)
pos_Rdna <- matrix(0,nrow=aggRdna$Group.1,ncol=1);
total_Rdna <- matrix(0,nrow=aggRdna$Group.1,ncol=1);

for (i in 1:length(aggRdna$Group.1))
pos_Rdna[i] <- sum((exp$NucID==aggRdna$Group.1[i])&(exp$Filename==aggRdna$Group.2[i])&(exp$Rdna<=1.600));

for (i in 1:length(aggRdna$Group.1))
total_Rdna[i] <- sum((exp$NucID==aggRdna$Group.1[i])&(exp$Filename==aggRdna$Group.2[i])&(exp$Rdna>0));

Perc_pos_Rdna_exp = pos_Rdna; #gives fraction of foci in a nucleus above a given Rdna value which is defined by thr
Perc_pos_Rdna_exp_f = pos_Rdna/total_Rdna;

postscript("HP2_at_or_below_1.600_boxplot<=.ps"); #turns postscript on to save file to location in ""
boxplot(Perc_pos_Rdna_exp, Perc_pos_Rdna_cont, ylab= "number of foci per nucleus where Rdna < or = 1.600", xlab="Left is HP2, right is control"); #makes boxplot
dev.off(); #turns postscript off

postscript("HP2_at_or_below_1.600_qqplot<=.ps"); #turns postscript on to save file to location in ""
qqplot(Perc_pos_Rdna_cont, Perc_pos_Rdna_exp, main="number of foci per nucleus where Rdna < or = 1.600"); #makes qqplot
dev.off(); #turns postscript off

postscript("HP2_at_or_below_1.600_boxplot_fraction.ps"); #turns postscript on to save file to location in ""
boxplot(Perc_pos_Rdna_exp_f, Perc_pos_Rdna_cont_f, ylab= "fraction of foci per nucleus where Rdna < or = 1.600", xlab="Left is HP2, right is control"); #makes boxplot
dev.off(); #turns postscript off

postscript("HP2_at_or_below_1.600_qqplot_fraction.ps"); #turns postscript on to save file to location in ""
qqplot(Perc_pos_Rdna_exp_f, Perc_pos_Rdna_cont_f, main="fraction of foci per nucleus where Rdna < or = 1.600"); #makes qqplot
dev.off(); #turns postscript off


# Calculation of stats above and below thr

sink("stat_tests_above_and_less_or_equal_to_1.600_output.txt");
 
contRdna_above_1.600 <- cont$Rdna[(cont$Rdna>1.600)]; # Extracts values above 1.600 and puts it in contRdna_above_1.600
expRdna_above_1.600 <- exp$Rdna[(exp$Rdna>1.600)];
print(shapiro.test(expRdna_above_1.600));
print(shapiro.test(contRdna_above_1.600));
print(t.test(contRdna_above_1.600,expRdna_above_1.600));
print(wilcox.test(contRdna_above_1.600,expRdna_above_1.600));

contRdna_at_or_below_1.600 <- cont$Rdna[(cont$Rdna<=1.600)];
expRdna_at_or_below_1.600 <- exp$Rdna[(exp$Rdna<=1.600)];
print(shapiro.test(expRdna_at_or_below_1.600));
print(shapiro.test(contRdna_at_or_below_1.600));
print(t.test(contRdna_at_or_below_1.600,expRdna_at_or_below_1.600));
print(wilcox.test(contRdna_at_or_below_1.600,expRdna_at_or_below_1.600));

sink();

postscript("HP2_Rdna_above_1.600_thr_boxplot_z.ps");
boxplot(expRdna_above_1.600,contRdna_above_1.600, ylab= "average Rdna per nucleus where Rdna is > 1.600", xlab="Left is HP2, right is control");
dev.off();

postscript("HP2_Rdna_at_or_below_1.600_thr_boxplot_z.ps");
boxplot(expRdna_at_or_below_1.600,contRdna_at_or_below_1.600, ylab= "average Rdna per nucleus where Rdna is < or = 1.600", xlab="Left is HP2, right is control");
dev.off();




##########names

exp_col<-rgb(1,0,0,.75); #assigns color and alpha value to exp data points
cont_col<-rgb(0,0,1,.5);

tiff(file="Histogram_of_HP2_and_GFP_control_above_1.600.tiff");
hist(expRdna_above_1.600, breaks=100, col=exp_col, main="Histogram of HP2 and GFP control Rdna values above 1.600");
hist(contRdna_above_1.600, breaks=100, col=cont_col, add=TRUE);
legend("topleft", c("HP2","HP2_control"), cex=0.8,col=c(exp_col,cont_col), pch=21:22, lty=1:2);
dev.off(); #turns postscript off

tiff(file="Histogram_of_HP2_above_1.600.tiff")
hist(expRdna_above_1.600, breaks=100, col=exp_col, main="Histogram of HP2 values above 1.600");
legend("topleft", c("HP2","HP2_control"), cex=0.8,col=c(exp_col,cont_col), pch=21:22, lty=1:2);
dev.off(); #turns postscript off

tiff("Histogram_of_HP2_control_above_1.600.tiff")
hist(contRdna_above_1.600, breaks=100, col=cont_col, main="Histogram of HP2_control values above 1.600");
legend("topleft", c("HP2","HP2_control"), cex=0.8,col=c(exp_col,cont_col), pch=21:22, lty=1:2);
dev.off(); #turns postscript off




tiff(file="Histogram_of_HP2_and_GFP_control_at_or_below_1.600.tiff");
hist(expRdna_at_or_below_1.600, breaks=100, col=exp_col, main="Histogram of HP2 and GFP control Rdna values at_or_below 1.600");
hist(contRdna_at_or_below_1.600, breaks=100, col=cont_col, add=TRUE);
legend("topleft", c("HP2","HP2_control"), cex=0.8,col=c(exp_col,cont_col), pch=21:22, lty=1:2);
dev.off(); #turns postscript off

tiff(file="Histogram_of_HP2_at_or_below_1.600.tiff")
hist(expRdna_at_or_below_1.600, breaks=100, col=exp_col, main="Histogram of HP2 values at_or_below 1.600");
legend("topleft", c("HP2","HP2_control"), cex=0.8,col=c(exp_col,cont_col), pch=21:22, lty=1:2);
dev.off(); #turns postscript off

tiff("Histogram_of_HP2_control_at_or_below_1.600.tiff")
hist(contRdna_at_or_below_1.600, breaks=100, col=cont_col, main="Histogram of HP2_control values at_or_below 1.600");
legend("topleft", c("HP2","HP2_control"), cex=0.8,col=c(exp_col,cont_col), pch=21:22, lty=1:2);
dev.off(); #turns postscript off






# cd /Users/joel/Desktop/6_10_09_imagesprocessed_with_sylvain/Processed/
# source("stats_sylvain_absolute_number.txt")
# Set threshold for group

#########  thr <- 1.700

thr <- 1.700;

# Process control
cont <- read.table("/Users/joel/Desktop/6_10_09_imagesprocessed_with_sylvain/Processed/HP2_control/processed/fitc/foci_summary.txt",header = TRUE);
aggRdna = aggregate(cont$Rdna,by=list(cont$NucID,cont$Filename),FUN=mean)
pos_RdnaC <- matrix(0,nrow=aggRdna$Group.1,ncol=1);
total_RdnaC <- matrix(0,nrow=aggRdna$Group.1,ncol=1);

for (i in 1:length(aggRdna$Group.1))
pos_RdnaC[i] <- sum((cont$NucID==aggRdna$Group.1[i])&(cont$Filename==aggRdna$Group.2[i])&(cont$Rdna>1.700));

for (i in 1:length(aggRdna$Group.1))
total_RdnaC[i] <- sum((cont$NucID==aggRdna$Group.1[i])&(cont$Filename==aggRdna$Group.2[i])&(cont$Rdna>0));

Perc_pos_Rdna_cont = pos_RdnaC; # number of foci above 1.700 per nucleus
Perc_pos_Rdna_cont_f = pos_RdnaC/total_RdnaC;

# Process experiment
exp <- read.table("/Users/joel/Desktop/6_10_09_imagesprocessed_with_sylvain/Processed/HP2/processed/fitc/foci_summary.txt",header = TRUE);
aggRdna = aggregate(exp$Rdna,by=list(exp$NucID,exp$Filename),FUN=mean)
pos_Rdna <- matrix(0,nrow=aggRdna$Group.1,ncol=1);
total_Rdna <- matrix(0,nrow=aggRdna$Group.1,ncol=1);

for (i in 1:length(aggRdna$Group.1))
pos_Rdna[i] <- sum((exp$NucID==aggRdna$Group.1[i])&(exp$Filename==aggRdna$Group.2[i])&(exp$Rdna>1.700));

for (i in 1:length(aggRdna$Group.1))
total_Rdna[i] <- sum((exp$NucID==aggRdna$Group.1[i])&(exp$Filename==aggRdna$Group.2[i])&(exp$Rdna>0));

Perc_pos_Rdna_exp = pos_Rdna; # gives number of foci in a nucleus above a given Rdna value which is defined by 1.700
Perc_pos_Rdna_exp_f = pos_Rdna/total_Rdna; # gives fraction of foci in a nucleus above a given Rdna value which is defined by 1.700




postscript("HP2_above_1.700_boxplot.ps"); #turns postscript on to save file to location in ""
boxplot(Perc_pos_Rdna_exp, Perc_pos_Rdna_cont, ylab= "number of foci per nucleus where Rdna > 1.700", xlab="Left is HP2, right is control"); #makes boxplot
dev.off(); #turns postscript off

postscript("HP2_above_1.700_qqplot.ps"); #turns postscript on to save file to location in ""
qqplot(Perc_pos_Rdna_exp, Perc_pos_Rdna_cont, main ="number of foci per nucleus where Rdna > 1.700"); #makes qqplot
dev.off(); #turns postscript off


postscript("HP2_above_1.700_boxplot_fraction.ps"); #turns postscript on to save file to location in ""
boxplot(Perc_pos_Rdna_exp_f, Perc_pos_Rdna_cont_f, ylab= "fraction of foci per nucleus where Rdna > 1.700", xlab="Left is HP2, right is control"); #makes boxplot
dev.off(); #turns postscript off

postscript("HP2_above_1.700_qqplot_fraction.ps"); #turns postscript on to save file to location in ""
qqplot(Perc_pos_Rdna_exp_f, Perc_pos_Rdna_cont_f, main ="fraction of foci per nucleus where Rdna > 1.700"); #makes qqplot
dev.off(); #turns postscript off




exp_above_1.700 <- Perc_pos_Rdna_exp;
cntrl_above_1.700 <- Perc_pos_Rdna_cont;


# performs above analysis for values less than or equal to the threshold
# Process control
cont <- read.table("/Users/joel/Desktop/6_10_09_imagesprocessed_with_sylvain/Processed/HP2_control/processed/fitc/foci_summary.txt",header = TRUE);
aggRdna = aggregate(cont$Rdna,by=list(cont$NucID,cont$Filename),FUN=mean)
pos_RdnaC <- matrix(0,nrow=aggRdna$Group.1,ncol=1);
total_RdnaC <- matrix(0,nrow=aggRdna$Group.1,ncol=1);

for (i in 1:length(aggRdna$Group.1))
pos_RdnaC[i] <- sum((cont$NucID==aggRdna$Group.1[i])&(cont$Filename==aggRdna$Group.2[i])&(cont$Rdna<=1.700));

for (i in 1:length(aggRdna$Group.1))
total_RdnaC[i] <- sum((cont$NucID==aggRdna$Group.1[i])&(cont$Filename==aggRdna$Group.2[i])&(cont$Rdna>0));

Perc_pos_Rdna_cont = pos_RdnaC;
Perc_pos_Rdna_cont_f = pos_RdnaC/total_RdnaC;


# Process experiment
exp <- read.table("/Users/joel/Desktop/6_10_09_imagesprocessed_with_sylvain/Processed/HP2/processed/fitc/foci_summary.txt",header = TRUE);
aggRdna = aggregate(exp$Rdna,by=list(exp$NucID,exp$Filename),FUN=mean)
pos_Rdna <- matrix(0,nrow=aggRdna$Group.1,ncol=1);
total_Rdna <- matrix(0,nrow=aggRdna$Group.1,ncol=1);

for (i in 1:length(aggRdna$Group.1))
pos_Rdna[i] <- sum((exp$NucID==aggRdna$Group.1[i])&(exp$Filename==aggRdna$Group.2[i])&(exp$Rdna<=1.700));

for (i in 1:length(aggRdna$Group.1))
total_Rdna[i] <- sum((exp$NucID==aggRdna$Group.1[i])&(exp$Filename==aggRdna$Group.2[i])&(exp$Rdna>0));

Perc_pos_Rdna_exp = pos_Rdna; #gives fraction of foci in a nucleus above a given Rdna value which is defined by thr
Perc_pos_Rdna_exp_f = pos_Rdna/total_Rdna;

postscript("HP2_at_or_below_1.700_boxplot<=.ps"); #turns postscript on to save file to location in ""
boxplot(Perc_pos_Rdna_exp, Perc_pos_Rdna_cont, ylab= "number of foci per nucleus where Rdna < or = 1.700", xlab="Left is HP2, right is control"); #makes boxplot
dev.off(); #turns postscript off

postscript("HP2_at_or_below_1.700_qqplot<=.ps"); #turns postscript on to save file to location in ""
qqplot(Perc_pos_Rdna_cont, Perc_pos_Rdna_exp, main="number of foci per nucleus where Rdna < or = 1.700"); #makes qqplot
dev.off(); #turns postscript off

postscript("HP2_at_or_below_1.700_boxplot_fraction.ps"); #turns postscript on to save file to location in ""
boxplot(Perc_pos_Rdna_exp_f, Perc_pos_Rdna_cont_f, ylab= "fraction of foci per nucleus where Rdna < or = 1.700", xlab="Left is HP2, right is control"); #makes boxplot
dev.off(); #turns postscript off

postscript("HP2_at_or_below_1.700_qqplot_fraction.ps"); #turns postscript on to save file to location in ""
qqplot(Perc_pos_Rdna_exp_f, Perc_pos_Rdna_cont_f, main="fraction of foci per nucleus where Rdna < or = 1.700"); #makes qqplot
dev.off(); #turns postscript off


# Calculation of stats above and below thr

sink("stat_tests_above_and_less_or_equal_to_1.700_output.txt");
 
contRdna_above_1.700 <- cont$Rdna[(cont$Rdna>1.700)]; # Extracts values above 1.700 and puts it in contRdna_above_1.700
expRdna_above_1.700 <- exp$Rdna[(exp$Rdna>1.700)];
print(shapiro.test(expRdna_above_1.700));
print(shapiro.test(contRdna_above_1.700));
print(t.test(contRdna_above_1.700,expRdna_above_1.700));
print(wilcox.test(contRdna_above_1.700,expRdna_above_1.700));

contRdna_at_or_below_1.700 <- cont$Rdna[(cont$Rdna<=1.700)];
expRdna_at_or_below_1.700 <- exp$Rdna[(exp$Rdna<=1.700)];
print(shapiro.test(expRdna_at_or_below_1.700));
print(shapiro.test(contRdna_at_or_below_1.700));
print(t.test(contRdna_at_or_below_1.700,expRdna_at_or_below_1.700));
print(wilcox.test(contRdna_at_or_below_1.700,expRdna_at_or_below_1.700));

sink();

postscript("HP2_Rdna_above_1.700_thr_boxplot_z.ps");
boxplot(expRdna_above_1.700,contRdna_above_1.700, ylab= "average Rdna per nucleus where Rdna is > 1.700", xlab="Left is HP2, right is control");
dev.off();

postscript("HP2_Rdna_at_or_below_1.700_thr_boxplot_z.ps");
boxplot(expRdna_at_or_below_1.700,contRdna_at_or_below_1.700, ylab= "average Rdna per nucleus where Rdna is < or = 1.700", xlab="Left is HP2, right is control");
dev.off();




##########names

exp_col<-rgb(1,0,0,.75); #assigns color and alpha value to exp data points
cont_col<-rgb(0,0,1,.5);

tiff(file="Histogram_of_HP2_and_GFP_control_above_1.700.tiff");
hist(expRdna_above_1.700, breaks=100, col=exp_col, main="Histogram of HP2 and GFP control Rdna values above 1.700");
hist(contRdna_above_1.700, breaks=100, col=cont_col, add=TRUE);
legend("topleft", c("HP2","HP2_control"), cex=0.8,col=c(exp_col,cont_col), pch=21:22, lty=1:2);
dev.off(); #turns postscript off

tiff(file="Histogram_of_HP2_above_1.700.tiff")
hist(expRdna_above_1.700, breaks=100, col=exp_col, main="Histogram of HP2 values above 1.700");
legend("topleft", c("HP2","HP2_control"), cex=0.8,col=c(exp_col,cont_col), pch=21:22, lty=1:2);
dev.off(); #turns postscript off

tiff("Histogram_of_HP2_control_above_1.700.tiff")
hist(contRdna_above_1.700, breaks=100, col=cont_col, main="Histogram of HP2_control values above 1.700");
legend("topleft", c("HP2","HP2_control"), cex=0.8,col=c(exp_col,cont_col), pch=21:22, lty=1:2);
dev.off(); #turns postscript off




tiff(file="Histogram_of_HP2_and_GFP_control_at_or_below_1.700.tiff");
hist(expRdna_at_or_below_1.700, breaks=100, col=exp_col, main="Histogram of HP2 and GFP control Rdna values at_or_below 1.700");
hist(contRdna_at_or_below_1.700, breaks=100, col=cont_col, add=TRUE);
legend("topleft", c("HP2","HP2_control"), cex=0.8,col=c(exp_col,cont_col), pch=21:22, lty=1:2);
dev.off(); #turns postscript off

tiff(file="Histogram_of_HP2_at_or_below_1.700.tiff")
hist(expRdna_at_or_below_1.700, breaks=100, col=exp_col, main="Histogram of HP2 values at_or_below 1.700");
legend("topleft", c("HP2","HP2_control"), cex=0.8,col=c(exp_col,cont_col), pch=21:22, lty=1:2);
dev.off(); #turns postscript off

tiff("Histogram_of_HP2_control_at_or_below_1.700.tiff")
hist(contRdna_at_or_below_1.700, breaks=100, col=cont_col, main="Histogram of HP2_control values at_or_below 1.700");
legend("topleft", c("HP2","HP2_control"), cex=0.8,col=c(exp_col,cont_col), pch=21:22, lty=1:2);
dev.off(); #turns postscript off



# cd /Users/joel/Desktop/6_10_09_imagesprocessed_with_sylvain/Processed/
# source("stats_sylvain_absolute_number.txt")
# Set threshold for group

#########  thr <- 1.800

thr <- 1.800;

# Process control
cont <- read.table("/Users/joel/Desktop/6_10_09_imagesprocessed_with_sylvain/Processed/HP2_control/processed/fitc/foci_summary.txt",header = TRUE);
aggRdna = aggregate(cont$Rdna,by=list(cont$NucID,cont$Filename),FUN=mean)
pos_RdnaC <- matrix(0,nrow=aggRdna$Group.1,ncol=1);
total_RdnaC <- matrix(0,nrow=aggRdna$Group.1,ncol=1);

for (i in 1:length(aggRdna$Group.1))
pos_RdnaC[i] <- sum((cont$NucID==aggRdna$Group.1[i])&(cont$Filename==aggRdna$Group.2[i])&(cont$Rdna>1.800));

for (i in 1:length(aggRdna$Group.1))
total_RdnaC[i] <- sum((cont$NucID==aggRdna$Group.1[i])&(cont$Filename==aggRdna$Group.2[i])&(cont$Rdna>0));

Perc_pos_Rdna_cont = pos_RdnaC; # number of foci above 1.800 per nucleus
Perc_pos_Rdna_cont_f = pos_RdnaC/total_RdnaC;

# Process experiment
exp <- read.table("/Users/joel/Desktop/6_10_09_imagesprocessed_with_sylvain/Processed/HP2/processed/fitc/foci_summary.txt",header = TRUE);
aggRdna = aggregate(exp$Rdna,by=list(exp$NucID,exp$Filename),FUN=mean)
pos_Rdna <- matrix(0,nrow=aggRdna$Group.1,ncol=1);
total_Rdna <- matrix(0,nrow=aggRdna$Group.1,ncol=1);

for (i in 1:length(aggRdna$Group.1))
pos_Rdna[i] <- sum((exp$NucID==aggRdna$Group.1[i])&(exp$Filename==aggRdna$Group.2[i])&(exp$Rdna>1.800));

for (i in 1:length(aggRdna$Group.1))
total_Rdna[i] <- sum((exp$NucID==aggRdna$Group.1[i])&(exp$Filename==aggRdna$Group.2[i])&(exp$Rdna>0));

Perc_pos_Rdna_exp = pos_Rdna; # gives number of foci in a nucleus above a given Rdna value which is defined by 1.800
Perc_pos_Rdna_exp_f = pos_Rdna/total_Rdna; # gives fraction of foci in a nucleus above a given Rdna value which is defined by 1.800




postscript("HP2_above_1.800_boxplot.ps"); #turns postscript on to save file to location in ""
boxplot(Perc_pos_Rdna_exp, Perc_pos_Rdna_cont, ylab= "number of foci per nucleus where Rdna > 1.800", xlab="Left is HP2, right is control"); #makes boxplot
dev.off(); #turns postscript off

postscript("HP2_above_1.800_qqplot.ps"); #turns postscript on to save file to location in ""
qqplot(Perc_pos_Rdna_exp, Perc_pos_Rdna_cont, main ="number of foci per nucleus where Rdna > 1.800"); #makes qqplot
dev.off(); #turns postscript off


postscript("HP2_above_1.800_boxplot_fraction.ps"); #turns postscript on to save file to location in ""
boxplot(Perc_pos_Rdna_exp_f, Perc_pos_Rdna_cont_f, ylab= "fraction of foci per nucleus where Rdna > 1.800", xlab="Left is HP2, right is control"); #makes boxplot
dev.off(); #turns postscript off

postscript("HP2_above_1.800_qqplot_fraction.ps"); #turns postscript on to save file to location in ""
qqplot(Perc_pos_Rdna_exp_f, Perc_pos_Rdna_cont_f, main ="fraction of foci per nucleus where Rdna > 1.800"); #makes qqplot
dev.off(); #turns postscript off




exp_above_1.800 <- Perc_pos_Rdna_exp;
cntrl_above_1.800 <- Perc_pos_Rdna_cont;


# performs above analysis for values less than or equal to the threshold
# Process control
cont <- read.table("/Users/joel/Desktop/6_10_09_imagesprocessed_with_sylvain/Processed/HP2_control/processed/fitc/foci_summary.txt",header = TRUE);
aggRdna = aggregate(cont$Rdna,by=list(cont$NucID,cont$Filename),FUN=mean)
pos_RdnaC <- matrix(0,nrow=aggRdna$Group.1,ncol=1);
total_RdnaC <- matrix(0,nrow=aggRdna$Group.1,ncol=1);

for (i in 1:length(aggRdna$Group.1))
pos_RdnaC[i] <- sum((cont$NucID==aggRdna$Group.1[i])&(cont$Filename==aggRdna$Group.2[i])&(cont$Rdna<=1.800));

for (i in 1:length(aggRdna$Group.1))
total_RdnaC[i] <- sum((cont$NucID==aggRdna$Group.1[i])&(cont$Filename==aggRdna$Group.2[i])&(cont$Rdna>0));

Perc_pos_Rdna_cont = pos_RdnaC;
Perc_pos_Rdna_cont_f = pos_RdnaC/total_RdnaC;


# Process experiment
exp <- read.table("/Users/joel/Desktop/6_10_09_imagesprocessed_with_sylvain/Processed/HP2/processed/fitc/foci_summary.txt",header = TRUE);
aggRdna = aggregate(exp$Rdna,by=list(exp$NucID,exp$Filename),FUN=mean)
pos_Rdna <- matrix(0,nrow=aggRdna$Group.1,ncol=1);
total_Rdna <- matrix(0,nrow=aggRdna$Group.1,ncol=1);

for (i in 1:length(aggRdna$Group.1))
pos_Rdna[i] <- sum((exp$NucID==aggRdna$Group.1[i])&(exp$Filename==aggRdna$Group.2[i])&(exp$Rdna<=1.800));

for (i in 1:length(aggRdna$Group.1))
total_Rdna[i] <- sum((exp$NucID==aggRdna$Group.1[i])&(exp$Filename==aggRdna$Group.2[i])&(exp$Rdna>0));

Perc_pos_Rdna_exp = pos_Rdna; #gives fraction of foci in a nucleus above a given Rdna value which is defined by thr
Perc_pos_Rdna_exp_f = pos_Rdna/total_Rdna;

postscript("HP2_at_or_below_1.800_boxplot<=.ps"); #turns postscript on to save file to location in ""
boxplot(Perc_pos_Rdna_exp, Perc_pos_Rdna_cont, ylab= "number of foci per nucleus where Rdna < or = 1.800", xlab="Left is HP2, right is control"); #makes boxplot
dev.off(); #turns postscript off

postscript("HP2_at_or_below_1.800_qqplot<=.ps"); #turns postscript on to save file to location in ""
qqplot(Perc_pos_Rdna_cont, Perc_pos_Rdna_exp, main="number of foci per nucleus where Rdna < or = 1.800"); #makes qqplot
dev.off(); #turns postscript off

postscript("HP2_at_or_below_1.800_boxplot_fraction.ps"); #turns postscript on to save file to location in ""
boxplot(Perc_pos_Rdna_exp_f, Perc_pos_Rdna_cont_f, ylab= "fraction of foci per nucleus where Rdna < or = 1.800", xlab="Left is HP2, right is control"); #makes boxplot
dev.off(); #turns postscript off

postscript("HP2_at_or_below_1.800_qqplot_fraction.ps"); #turns postscript on to save file to location in ""
qqplot(Perc_pos_Rdna_exp_f, Perc_pos_Rdna_cont_f, main="fraction of foci per nucleus where Rdna < or = 1.800"); #makes qqplot
dev.off(); #turns postscript off


# Calculation of stats above and below thr

sink("stat_tests_above_and_less_or_equal_to_1.800_output.txt");
 
contRdna_above_1.800 <- cont$Rdna[(cont$Rdna>1.800)]; # Extracts values above 1.800 and puts it in contRdna_above_1.800
expRdna_above_1.800 <- exp$Rdna[(exp$Rdna>1.800)];
print(shapiro.test(expRdna_above_1.800));
print(shapiro.test(contRdna_above_1.800));
print(t.test(contRdna_above_1.800,expRdna_above_1.800));
print(wilcox.test(contRdna_above_1.800,expRdna_above_1.800));

contRdna_at_or_below_1.800 <- cont$Rdna[(cont$Rdna<=1.800)];
expRdna_at_or_below_1.800 <- exp$Rdna[(exp$Rdna<=1.800)];
print(shapiro.test(expRdna_at_or_below_1.800));
print(shapiro.test(contRdna_at_or_below_1.800));
print(t.test(contRdna_at_or_below_1.800,expRdna_at_or_below_1.800));
print(wilcox.test(contRdna_at_or_below_1.800,expRdna_at_or_below_1.800));

sink();

postscript("HP2_Rdna_above_1.800_thr_boxplot_z.ps");
boxplot(expRdna_above_1.800,contRdna_above_1.800, ylab= "average Rdna per nucleus where Rdna is > 1.800", xlab="Left is HP2, right is control");
dev.off();

postscript("HP2_Rdna_at_or_below_1.800_thr_boxplot_z.ps");
boxplot(expRdna_at_or_below_1.800,contRdna_at_or_below_1.800, ylab= "average Rdna per nucleus where Rdna is < or = 1.800", xlab="Left is HP2, right is control");
dev.off();




##########names

exp_col<-rgb(1,0,0,.75); #assigns color and alpha value to exp data points
cont_col<-rgb(0,0,1,.5);

tiff(file="Histogram_of_HP2_and_GFP_control_above_1.800.tiff");
hist(expRdna_above_1.800, breaks=100, col=exp_col, main="Histogram of HP2 and GFP control Rdna values above 1.800");
hist(contRdna_above_1.800, breaks=100, col=cont_col, add=TRUE);
legend("topleft", c("HP2","HP2_control"), cex=0.8,col=c(exp_col,cont_col), pch=21:22, lty=1:2);
dev.off(); #turns postscript off

tiff(file="Histogram_of_HP2_above_1.800.tiff")
hist(expRdna_above_1.800, breaks=100, col=exp_col, main="Histogram of HP2 values above 1.800");
legend("topleft", c("HP2","HP2_control"), cex=0.8,col=c(exp_col,cont_col), pch=21:22, lty=1:2);
dev.off(); #turns postscript off

tiff("Histogram_of_HP2_control_above_1.800.tiff")
hist(contRdna_above_1.800, breaks=100, col=cont_col, main="Histogram of HP2_control values above 1.800");
legend("topleft", c("HP2","HP2_control"), cex=0.8,col=c(exp_col,cont_col), pch=21:22, lty=1:2);
dev.off(); #turns postscript off




tiff(file="Histogram_of_HP2_and_GFP_control_at_or_below_1.800.tiff");
hist(expRdna_at_or_below_1.800, breaks=100, col=exp_col, main="Histogram of HP2 and GFP control Rdna values at_or_below 1.800");
hist(contRdna_at_or_below_1.800, breaks=100, col=cont_col, add=TRUE);
legend("topleft", c("HP2","HP2_control"), cex=0.8,col=c(exp_col,cont_col), pch=21:22, lty=1:2);
dev.off(); #turns postscript off

tiff(file="Histogram_of_HP2_at_or_below_1.800.tiff")
hist(expRdna_at_or_below_1.800, breaks=100, col=exp_col, main="Histogram of HP2 values at_or_below 1.800");
legend("topleft", c("HP2","HP2_control"), cex=0.8,col=c(exp_col,cont_col), pch=21:22, lty=1:2);
dev.off(); #turns postscript off

tiff("Histogram_of_HP2_control_at_or_below_1.800.tiff")
hist(contRdna_at_or_below_1.800, breaks=100, col=cont_col, main="Histogram of HP2_control values at_or_below 1.800");
legend("topleft", c("HP2","HP2_control"), cex=0.8,col=c(exp_col,cont_col), pch=21:22, lty=1:2);
dev.off(); #turns postscript off



# cd /Users/joel/Desktop/6_10_09_imagesprocessed_with_sylvain/Processed/
# source("stats_sylvain_absolute_number.txt")
# Set threshold for group

#########  thr <- 1.900

thr <- 1.900;

# Process control
cont <- read.table("/Users/joel/Desktop/6_10_09_imagesprocessed_with_sylvain/Processed/HP2_control/processed/fitc/foci_summary.txt",header = TRUE);
aggRdna = aggregate(cont$Rdna,by=list(cont$NucID,cont$Filename),FUN=mean)
pos_RdnaC <- matrix(0,nrow=aggRdna$Group.1,ncol=1);
total_RdnaC <- matrix(0,nrow=aggRdna$Group.1,ncol=1);

for (i in 1:length(aggRdna$Group.1))
pos_RdnaC[i] <- sum((cont$NucID==aggRdna$Group.1[i])&(cont$Filename==aggRdna$Group.2[i])&(cont$Rdna>1.900));

for (i in 1:length(aggRdna$Group.1))
total_RdnaC[i] <- sum((cont$NucID==aggRdna$Group.1[i])&(cont$Filename==aggRdna$Group.2[i])&(cont$Rdna>0));

Perc_pos_Rdna_cont = pos_RdnaC; # number of foci above 1.900 per nucleus
Perc_pos_Rdna_cont_f = pos_RdnaC/total_RdnaC;

# Process experiment
exp <- read.table("/Users/joel/Desktop/6_10_09_imagesprocessed_with_sylvain/Processed/HP2/processed/fitc/foci_summary.txt",header = TRUE);
aggRdna = aggregate(exp$Rdna,by=list(exp$NucID,exp$Filename),FUN=mean)
pos_Rdna <- matrix(0,nrow=aggRdna$Group.1,ncol=1);
total_Rdna <- matrix(0,nrow=aggRdna$Group.1,ncol=1);

for (i in 1:length(aggRdna$Group.1))
pos_Rdna[i] <- sum((exp$NucID==aggRdna$Group.1[i])&(exp$Filename==aggRdna$Group.2[i])&(exp$Rdna>1.900));

for (i in 1:length(aggRdna$Group.1))
total_Rdna[i] <- sum((exp$NucID==aggRdna$Group.1[i])&(exp$Filename==aggRdna$Group.2[i])&(exp$Rdna>0));

Perc_pos_Rdna_exp = pos_Rdna; # gives number of foci in a nucleus above a given Rdna value which is defined by 1.900
Perc_pos_Rdna_exp_f = pos_Rdna/total_Rdna; # gives fraction of foci in a nucleus above a given Rdna value which is defined by 1.900




postscript("HP2_above_1.900_boxplot.ps"); #turns postscript on to save file to location in ""
boxplot(Perc_pos_Rdna_exp, Perc_pos_Rdna_cont, ylab= "number of foci per nucleus where Rdna > 1.900", xlab="Left is HP2, right is control"); #makes boxplot
dev.off(); #turns postscript off

postscript("HP2_above_1.900_qqplot.ps"); #turns postscript on to save file to location in ""
qqplot(Perc_pos_Rdna_exp, Perc_pos_Rdna_cont, main ="number of foci per nucleus where Rdna > 1.900"); #makes qqplot
dev.off(); #turns postscript off


postscript("HP2_above_1.900_boxplot_fraction.ps"); #turns postscript on to save file to location in ""
boxplot(Perc_pos_Rdna_exp_f, Perc_pos_Rdna_cont_f, ylab= "fraction of foci per nucleus where Rdna > 1.900", xlab="Left is HP2, right is control"); #makes boxplot
dev.off(); #turns postscript off

postscript("HP2_above_1.900_qqplot_fraction.ps"); #turns postscript on to save file to location in ""
qqplot(Perc_pos_Rdna_exp_f, Perc_pos_Rdna_cont_f, main ="fraction of foci per nucleus where Rdna > 1.900"); #makes qqplot
dev.off(); #turns postscript off




exp_above_1.900 <- Perc_pos_Rdna_exp;
cntrl_above_1.900 <- Perc_pos_Rdna_cont;


# performs above analysis for values less than or equal to the threshold
# Process control
cont <- read.table("/Users/joel/Desktop/6_10_09_imagesprocessed_with_sylvain/Processed/HP2_control/processed/fitc/foci_summary.txt",header = TRUE);
aggRdna = aggregate(cont$Rdna,by=list(cont$NucID,cont$Filename),FUN=mean)
pos_RdnaC <- matrix(0,nrow=aggRdna$Group.1,ncol=1);
total_RdnaC <- matrix(0,nrow=aggRdna$Group.1,ncol=1);

for (i in 1:length(aggRdna$Group.1))
pos_RdnaC[i] <- sum((cont$NucID==aggRdna$Group.1[i])&(cont$Filename==aggRdna$Group.2[i])&(cont$Rdna<=1.900));

for (i in 1:length(aggRdna$Group.1))
total_RdnaC[i] <- sum((cont$NucID==aggRdna$Group.1[i])&(cont$Filename==aggRdna$Group.2[i])&(cont$Rdna>0));

Perc_pos_Rdna_cont = pos_RdnaC;
Perc_pos_Rdna_cont_f = pos_RdnaC/total_RdnaC;


# Process experiment
exp <- read.table("/Users/joel/Desktop/6_10_09_imagesprocessed_with_sylvain/Processed/HP2/processed/fitc/foci_summary.txt",header = TRUE);
aggRdna = aggregate(exp$Rdna,by=list(exp$NucID,exp$Filename),FUN=mean)
pos_Rdna <- matrix(0,nrow=aggRdna$Group.1,ncol=1);
total_Rdna <- matrix(0,nrow=aggRdna$Group.1,ncol=1);

for (i in 1:length(aggRdna$Group.1))
pos_Rdna[i] <- sum((exp$NucID==aggRdna$Group.1[i])&(exp$Filename==aggRdna$Group.2[i])&(exp$Rdna<=1.900));

for (i in 1:length(aggRdna$Group.1))
total_Rdna[i] <- sum((exp$NucID==aggRdna$Group.1[i])&(exp$Filename==aggRdna$Group.2[i])&(exp$Rdna>0));

Perc_pos_Rdna_exp = pos_Rdna; #gives fraction of foci in a nucleus above a given Rdna value which is defined by thr
Perc_pos_Rdna_exp_f = pos_Rdna/total_Rdna;

postscript("HP2_at_or_below_1.900_boxplot<=.ps"); #turns postscript on to save file to location in ""
boxplot(Perc_pos_Rdna_exp, Perc_pos_Rdna_cont, ylab= "number of foci per nucleus where Rdna < or = 1.900", xlab="Left is HP2, right is control"); #makes boxplot
dev.off(); #turns postscript off

postscript("HP2_at_or_below_1.900_qqplot<=.ps"); #turns postscript on to save file to location in ""
qqplot(Perc_pos_Rdna_cont, Perc_pos_Rdna_exp, main="number of foci per nucleus where Rdna < or = 1.900"); #makes qqplot
dev.off(); #turns postscript off

postscript("HP2_at_or_below_1.900_boxplot_fraction.ps"); #turns postscript on to save file to location in ""
boxplot(Perc_pos_Rdna_exp_f, Perc_pos_Rdna_cont_f, ylab= "fraction of foci per nucleus where Rdna < or = 1.900", xlab="Left is HP2, right is control"); #makes boxplot
dev.off(); #turns postscript off

postscript("HP2_at_or_below_1.900_qqplot_fraction.ps"); #turns postscript on to save file to location in ""
qqplot(Perc_pos_Rdna_exp_f, Perc_pos_Rdna_cont_f, main="fraction of foci per nucleus where Rdna < or = 1.900"); #makes qqplot
dev.off(); #turns postscript off


# Calculation of stats above and below thr

sink("stat_tests_above_and_less_or_equal_to_1.900_output.txt");
 
contRdna_above_1.900 <- cont$Rdna[(cont$Rdna>1.900)]; # Extracts values above 1.900 and puts it in contRdna_above_1.900
expRdna_above_1.900 <- exp$Rdna[(exp$Rdna>1.900)];
print(shapiro.test(expRdna_above_1.900));
print(shapiro.test(contRdna_above_1.900));
print(t.test(contRdna_above_1.900,expRdna_above_1.900));
print(wilcox.test(contRdna_above_1.900,expRdna_above_1.900));

contRdna_at_or_below_1.900 <- cont$Rdna[(cont$Rdna<=1.900)];
expRdna_at_or_below_1.900 <- exp$Rdna[(exp$Rdna<=1.900)];
print(shapiro.test(expRdna_at_or_below_1.900));
print(shapiro.test(contRdna_at_or_below_1.900));
print(t.test(contRdna_at_or_below_1.900,expRdna_at_or_below_1.900));
print(wilcox.test(contRdna_at_or_below_1.900,expRdna_at_or_below_1.900));

sink();

postscript("HP2_Rdna_above_1.900_thr_boxplot_z.ps");
boxplot(expRdna_above_1.900,contRdna_above_1.900, ylab= "average Rdna per nucleus where Rdna is > 1.900", xlab="Left is HP2, right is control");
dev.off();

postscript("HP2_Rdna_at_or_below_1.900_thr_boxplot_z.ps");
boxplot(expRdna_at_or_below_1.900,contRdna_at_or_below_1.900, ylab= "average Rdna per nucleus where Rdna is < or = 1.900", xlab="Left is HP2, right is control");
dev.off();




##########names

exp_col<-rgb(1,0,0,.75); #assigns color and alpha value to exp data points
cont_col<-rgb(0,0,1,.5);

tiff(file="Histogram_of_HP2_and_GFP_control_above_1.900.tiff");
hist(expRdna_above_1.900, breaks=100, col=exp_col, main="Histogram of HP2 and GFP control Rdna values above 1.900");
hist(contRdna_above_1.900, breaks=100, col=cont_col, add=TRUE);
legend("topleft", c("HP2","HP2_control"), cex=0.8,col=c(exp_col,cont_col), pch=21:22, lty=1:2);
dev.off(); #turns postscript off

tiff(file="Histogram_of_HP2_above_1.900.tiff")
hist(expRdna_above_1.900, breaks=100, col=exp_col, main="Histogram of HP2 values above 1.900");
legend("topleft", c("HP2","HP2_control"), cex=0.8,col=c(exp_col,cont_col), pch=21:22, lty=1:2);
dev.off(); #turns postscript off

tiff("Histogram_of_HP2_control_above_1.900.tiff")
hist(contRdna_above_1.900, breaks=100, col=cont_col, main="Histogram of HP2_control values above 1.900");
legend("topleft", c("HP2","HP2_control"), cex=0.8,col=c(exp_col,cont_col), pch=21:22, lty=1:2);
dev.off(); #turns postscript off




tiff(file="Histogram_of_HP2_and_GFP_control_at_or_below_1.900.tiff");
hist(expRdna_at_or_below_1.900, breaks=100, col=exp_col, main="Histogram of HP2 and GFP control Rdna values at_or_below 1.900");
hist(contRdna_at_or_below_1.900, breaks=100, col=cont_col, add=TRUE);
legend("topleft", c("HP2","HP2_control"), cex=0.8,col=c(exp_col,cont_col), pch=21:22, lty=1:2);
dev.off(); #turns postscript off

tiff(file="Histogram_of_HP2_at_or_below_1.900.tiff")
hist(expRdna_at_or_below_1.900, breaks=100, col=exp_col, main="Histogram of HP2 values at_or_below 1.900");
legend("topleft", c("HP2","HP2_control"), cex=0.8,col=c(exp_col,cont_col), pch=21:22, lty=1:2);
dev.off(); #turns postscript off

tiff("Histogram_of_HP2_control_at_or_below_1.900.tiff")
hist(contRdna_at_or_below_1.900, breaks=100, col=cont_col, main="Histogram of HP2_control values at_or_below 1.900");
legend("topleft", c("HP2","HP2_control"), cex=0.8,col=c(exp_col,cont_col), pch=21:22, lty=1:2);
dev.off(); #turns postscript off




# cd /Users/joel/Desktop/6_10_09_imagesprocessed_with_sylvain/Processed/
# source("stats_sylvain_absolute_number.txt")
# Set threshold for group

#########  thr <- 2.000

thr <- 2.000;

# Process control
cont <- read.table("/Users/joel/Desktop/6_10_09_imagesprocessed_with_sylvain/Processed/HP2_control/processed/fitc/foci_summary.txt",header = TRUE);
aggRdna = aggregate(cont$Rdna,by=list(cont$NucID,cont$Filename),FUN=mean)
pos_RdnaC <- matrix(0,nrow=aggRdna$Group.1,ncol=1);
total_RdnaC <- matrix(0,nrow=aggRdna$Group.1,ncol=1);

for (i in 1:length(aggRdna$Group.1))
pos_RdnaC[i] <- sum((cont$NucID==aggRdna$Group.1[i])&(cont$Filename==aggRdna$Group.2[i])&(cont$Rdna>2.000));

for (i in 1:length(aggRdna$Group.1))
total_RdnaC[i] <- sum((cont$NucID==aggRdna$Group.1[i])&(cont$Filename==aggRdna$Group.2[i])&(cont$Rdna>0));

Perc_pos_Rdna_cont = pos_RdnaC; # number of foci above 2.000 per nucleus
Perc_pos_Rdna_cont_f = pos_RdnaC/total_RdnaC;

# Process experiment
exp <- read.table("/Users/joel/Desktop/6_10_09_imagesprocessed_with_sylvain/Processed/HP2/processed/fitc/foci_summary.txt",header = TRUE);
aggRdna = aggregate(exp$Rdna,by=list(exp$NucID,exp$Filename),FUN=mean)
pos_Rdna <- matrix(0,nrow=aggRdna$Group.1,ncol=1);
total_Rdna <- matrix(0,nrow=aggRdna$Group.1,ncol=1);

for (i in 1:length(aggRdna$Group.1))
pos_Rdna[i] <- sum((exp$NucID==aggRdna$Group.1[i])&(exp$Filename==aggRdna$Group.2[i])&(exp$Rdna>2.000));

for (i in 1:length(aggRdna$Group.1))
total_Rdna[i] <- sum((exp$NucID==aggRdna$Group.1[i])&(exp$Filename==aggRdna$Group.2[i])&(exp$Rdna>0));

Perc_pos_Rdna_exp = pos_Rdna; # gives number of foci in a nucleus above a given Rdna value which is defined by 2.000
Perc_pos_Rdna_exp_f = pos_Rdna/total_Rdna; # gives fraction of foci in a nucleus above a given Rdna value which is defined by 2.000




postscript("HP2_above_2.000_boxplot.ps"); #turns postscript on to save file to location in ""
boxplot(Perc_pos_Rdna_exp, Perc_pos_Rdna_cont, ylab= "number of foci per nucleus where Rdna > 2.000", xlab="Left is HP2, right is control"); #makes boxplot
dev.off(); #turns postscript off

postscript("HP2_above_2.000_qqplot.ps"); #turns postscript on to save file to location in ""
qqplot(Perc_pos_Rdna_exp, Perc_pos_Rdna_cont, main ="number of foci per nucleus where Rdna > 2.000"); #makes qqplot
dev.off(); #turns postscript off


postscript("HP2_above_2.000_boxplot_fraction.ps"); #turns postscript on to save file to location in ""
boxplot(Perc_pos_Rdna_exp_f, Perc_pos_Rdna_cont_f, ylab= "fraction of foci per nucleus where Rdna > 2.000", xlab="Left is HP2, right is control"); #makes boxplot
dev.off(); #turns postscript off

postscript("HP2_above_2.000_qqplot_fraction.ps"); #turns postscript on to save file to location in ""
qqplot(Perc_pos_Rdna_exp_f, Perc_pos_Rdna_cont_f, main ="fraction of foci per nucleus where Rdna > 2.000"); #makes qqplot
dev.off(); #turns postscript off




exp_above_2.000 <- Perc_pos_Rdna_exp;
cntrl_above_2.000 <- Perc_pos_Rdna_cont;


# performs above analysis for values less than or equal to the threshold
# Process control
cont <- read.table("/Users/joel/Desktop/6_10_09_imagesprocessed_with_sylvain/Processed/HP2_control/processed/fitc/foci_summary.txt",header = TRUE);
aggRdna = aggregate(cont$Rdna,by=list(cont$NucID,cont$Filename),FUN=mean)
pos_RdnaC <- matrix(0,nrow=aggRdna$Group.1,ncol=1);
total_RdnaC <- matrix(0,nrow=aggRdna$Group.1,ncol=1);

for (i in 1:length(aggRdna$Group.1))
pos_RdnaC[i] <- sum((cont$NucID==aggRdna$Group.1[i])&(cont$Filename==aggRdna$Group.2[i])&(cont$Rdna<=2.000));

for (i in 1:length(aggRdna$Group.1))
total_RdnaC[i] <- sum((cont$NucID==aggRdna$Group.1[i])&(cont$Filename==aggRdna$Group.2[i])&(cont$Rdna>0));

Perc_pos_Rdna_cont = pos_RdnaC;
Perc_pos_Rdna_cont_f = pos_RdnaC/total_RdnaC;


# Process experiment
exp <- read.table("/Users/joel/Desktop/6_10_09_imagesprocessed_with_sylvain/Processed/HP2/processed/fitc/foci_summary.txt",header = TRUE);
aggRdna = aggregate(exp$Rdna,by=list(exp$NucID,exp$Filename),FUN=mean)
pos_Rdna <- matrix(0,nrow=aggRdna$Group.1,ncol=1);
total_Rdna <- matrix(0,nrow=aggRdna$Group.1,ncol=1);

for (i in 1:length(aggRdna$Group.1))
pos_Rdna[i] <- sum((exp$NucID==aggRdna$Group.1[i])&(exp$Filename==aggRdna$Group.2[i])&(exp$Rdna<=2.000));

for (i in 1:length(aggRdna$Group.1))
total_Rdna[i] <- sum((exp$NucID==aggRdna$Group.1[i])&(exp$Filename==aggRdna$Group.2[i])&(exp$Rdna>0));

Perc_pos_Rdna_exp = pos_Rdna; #gives fraction of foci in a nucleus above a given Rdna value which is defined by thr
Perc_pos_Rdna_exp_f = pos_Rdna/total_Rdna;

postscript("HP2_at_or_below_2.000_boxplot<=.ps"); #turns postscript on to save file to location in ""
boxplot(Perc_pos_Rdna_exp, Perc_pos_Rdna_cont, ylab= "number of foci per nucleus where Rdna < or = 2.000", xlab="Left is HP2, right is control"); #makes boxplot
dev.off(); #turns postscript off

postscript("HP2_at_or_below_2.000_qqplot<=.ps"); #turns postscript on to save file to location in ""
qqplot(Perc_pos_Rdna_cont, Perc_pos_Rdna_exp, main="number of foci per nucleus where Rdna < or = 2.000"); #makes qqplot
dev.off(); #turns postscript off

postscript("HP2_at_or_below_2.000_boxplot_fraction.ps"); #turns postscript on to save file to location in ""
boxplot(Perc_pos_Rdna_exp_f, Perc_pos_Rdna_cont_f, ylab= "fraction of foci per nucleus where Rdna < or = 2.000", xlab="Left is HP2, right is control"); #makes boxplot
dev.off(); #turns postscript off

postscript("HP2_at_or_below_2.000_qqplot_fraction.ps"); #turns postscript on to save file to location in ""
qqplot(Perc_pos_Rdna_exp_f, Perc_pos_Rdna_cont_f, main="fraction of foci per nucleus where Rdna < or = 2.000"); #makes qqplot
dev.off(); #turns postscript off


# Calculation of stats above and below thr

sink("stat_tests_above_and_less_or_equal_to_2.000_output.txt");
 
contRdna_above_2.000 <- cont$Rdna[(cont$Rdna>2.000)]; # Extracts values above 2.000 and puts it in contRdna_above_2.000
expRdna_above_2.000 <- exp$Rdna[(exp$Rdna>2.000)];
print(shapiro.test(expRdna_above_2.000));
print(shapiro.test(contRdna_above_2.000));
print(t.test(contRdna_above_2.000,expRdna_above_2.000));
print(wilcox.test(contRdna_above_2.000,expRdna_above_2.000));

contRdna_at_or_below_2.000 <- cont$Rdna[(cont$Rdna<=2.000)];
expRdna_at_or_below_2.000 <- exp$Rdna[(exp$Rdna<=2.000)];
print(shapiro.test(expRdna_at_or_below_2.000));
print(shapiro.test(contRdna_at_or_below_2.000));
print(t.test(contRdna_at_or_below_2.000,expRdna_at_or_below_2.000));
print(wilcox.test(contRdna_at_or_below_2.000,expRdna_at_or_below_2.000));

sink();

postscript("HP2_Rdna_above_2.000_thr_boxplot_z.ps");
boxplot(expRdna_above_2.000,contRdna_above_2.000, ylab= "average Rdna per nucleus where Rdna is > 2.000", xlab="Left is HP2, right is control");
dev.off();

postscript("HP2_Rdna_at_or_below_2.000_thr_boxplot_z.ps");
boxplot(expRdna_at_or_below_2.000,contRdna_at_or_below_2.000, ylab= "average Rdna per nucleus where Rdna is < or = 2.000", xlab="Left is HP2, right is control");
dev.off();




##########names

exp_col<-rgb(1,0,0,.75); #assigns color and alpha value to exp data points
cont_col<-rgb(0,0,1,.5);

tiff(file="Histogram_of_HP2_and_GFP_control_above_2.000.tiff");
hist(expRdna_above_2.000, breaks=100, col=exp_col, main="Histogram of HP2 and GFP control Rdna values above 2.000");
hist(contRdna_above_2.000, breaks=100, col=cont_col, add=TRUE);
legend("topleft", c("HP2","HP2_control"), cex=0.8,col=c(exp_col,cont_col), pch=21:22, lty=1:2);
dev.off(); #turns postscript off

tiff(file="Histogram_of_HP2_above_2.000.tiff")
hist(expRdna_above_2.000, breaks=100, col=exp_col, main="Histogram of HP2 values above 2.000");
legend("topleft", c("HP2","HP2_control"), cex=0.8,col=c(exp_col,cont_col), pch=21:22, lty=1:2);
dev.off(); #turns postscript off

tiff("Histogram_of_HP2_control_above_2.000.tiff")
hist(contRdna_above_2.000, breaks=100, col=cont_col, main="Histogram of HP2_control values above 2.000");
legend("topleft", c("HP2","HP2_control"), cex=0.8,col=c(exp_col,cont_col), pch=21:22, lty=1:2);
dev.off(); #turns postscript off




tiff(file="Histogram_of_HP2_and_GFP_control_at_or_below_2.000.tiff");
hist(expRdna_at_or_below_2.000, breaks=100, col=exp_col, main="Histogram of HP2 and GFP control Rdna values at_or_below 2.000");
hist(contRdna_at_or_below_2.000, breaks=100, col=cont_col, add=TRUE);
legend("topleft", c("HP2","HP2_control"), cex=0.8,col=c(exp_col,cont_col), pch=21:22, lty=1:2);
dev.off(); #turns postscript off

tiff(file="Histogram_of_HP2_at_or_below_2.000.tiff")
hist(expRdna_at_or_below_2.000, breaks=100, col=exp_col, main="Histogram of HP2 values at_or_below 2.000");
legend("topleft", c("HP2","HP2_control"), cex=0.8,col=c(exp_col,cont_col), pch=21:22, lty=1:2);
dev.off(); #turns postscript off

tiff("Histogram_of_HP2_control_at_or_below_2.000.tiff")
hist(contRdna_at_or_below_2.000, breaks=100, col=cont_col, main="Histogram of HP2_control values at_or_below 2.000");
legend("topleft", c("HP2","HP2_control"), cex=0.8,col=c(exp_col,cont_col), pch=21:22, lty=1:2);
dev.off(); #turns postscript off



